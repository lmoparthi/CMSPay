'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3053
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("OtherInsuranceDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class OtherInsuranceDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableMEDOTHER_INS As MEDOTHER_INSDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("MEDOTHER_INS")) Is Nothing) Then
                MyBase.Tables.Add(New MEDOTHER_INSDataTable(ds.Tables("MEDOTHER_INS")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MEDOTHER_INS() As MEDOTHER_INSDataTable
        Get
            Return Me.tableMEDOTHER_INS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As OtherInsuranceDataSet = CType(MyBase.Clone,OtherInsuranceDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("MEDOTHER_INS")) Is Nothing) Then
                MyBase.Tables.Add(New MEDOTHER_INSDataTable(ds.Tables("MEDOTHER_INS")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableMEDOTHER_INS = CType(MyBase.Tables("MEDOTHER_INS"),MEDOTHER_INSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMEDOTHER_INS) Is Nothing) Then
                Me.tableMEDOTHER_INS.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "OtherInsuranceDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/OtherInsuranceDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableMEDOTHER_INS = New MEDOTHER_INSDataTable
        MyBase.Tables.Add(Me.tableMEDOTHER_INS)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeMEDOTHER_INS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As OtherInsuranceDataSet = New OtherInsuranceDataSet
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub MEDOTHER_INSRowChangeEventHandler(ByVal sender As Object, ByVal e As MEDOTHER_INSRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MEDOTHER_INSDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnFAMILY_ID As Global.System.Data.DataColumn
        
        Private columnRELATION_ID As Global.System.Data.DataColumn
        
        Private columnOCC_FROM_DATE As Global.System.Data.DataColumn
        
        Private columnOCC_TO_DATE As Global.System.Data.DataColumn
        
        Private columnWORKING_SPOUSE_SW As Global.System.Data.DataColumn
        
        Private columnOTH_INS_REFUSAL_SW As Global.System.Data.DataColumn
        
        Private columnOTH_ID As Global.System.Data.DataColumn
        
        Private columnOTH_POLICY As Global.System.Data.DataColumn
        
        Private columnOTH_TAXID As Global.System.Data.DataColumn
        
        Private columnOTH_INSURER As Global.System.Data.DataColumn
        
        Private columnOTH_INSURER_PAT_ACCT_NBR As Global.System.Data.DataColumn
        
        Private columnOTH_CONTACT As Global.System.Data.DataColumn
        
        Private columnOTH_EMAIL As Global.System.Data.DataColumn
        
        Private columnOTH_PHONE1 As Global.System.Data.DataColumn
        
        Private columnOTH_PHONE2 As Global.System.Data.DataColumn
        
        Private columnOTH_NAME As Global.System.Data.DataColumn
        
        Private columnOTH_NAME2 As Global.System.Data.DataColumn
        
        Private columnOTH_ADDR1 As Global.System.Data.DataColumn
        
        Private columnOTH_ADDR2 As Global.System.Data.DataColumn
        
        Private columnOTH_CITY As Global.System.Data.DataColumn
        
        Private columnOTH_STATE As Global.System.Data.DataColumn
        
        Private columnOTH_ZIP As Global.System.Data.DataColumn
        
        Private columnOTH_ZIP2 As Global.System.Data.DataColumn
        
        Private columnOTH_SSN As Global.System.Data.DataColumn
        
        Private columnOTH_FNAME As Global.System.Data.DataColumn
        
        Private columnOTH_LNAME As Global.System.Data.DataColumn
        
        Private columnOTH_SEX As Global.System.Data.DataColumn
        
        Private columnOTH_RELATION As Global.System.Data.DataColumn
        
        Private columnOTH_DOB As Global.System.Data.DataColumn
        
        Private columnCREATE_USERID As Global.System.Data.DataColumn
        
        Private columnCREATE_DATE As Global.System.Data.DataColumn
        
        Private columnUSERID As Global.System.Data.DataColumn
        
        Private columnLASTUPDT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MEDOTHER_INS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FAMILY_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFAMILY_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RELATION_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRELATION_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OCC_FROM_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOCC_FROM_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OCC_TO_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOCC_TO_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property WORKING_SPOUSE_SWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWORKING_SPOUSE_SW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTH_INS_REFUSAL_SWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTH_INS_REFUSAL_SW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTH_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTH_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTH_POLICYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTH_POLICY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTH_TAXIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTH_TAXID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTH_INSURERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTH_INSURER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTH_INSURER_PAT_ACCT_NBRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTH_INSURER_PAT_ACCT_NBR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTH_CONTACTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTH_CONTACT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTH_EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTH_EMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTH_PHONE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTH_PHONE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTH_PHONE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTH_PHONE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTH_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTH_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTH_NAME2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTH_NAME2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTH_ADDR1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTH_ADDR1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTH_ADDR2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTH_ADDR2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTH_CITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTH_CITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTH_STATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTH_STATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTH_ZIPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTH_ZIP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTH_ZIP2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTH_ZIP2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTH_SSNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTH_SSN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTH_FNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTH_FNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTH_LNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTH_LNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTH_SEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTH_SEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTH_RELATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTH_RELATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTH_DOBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTH_DOB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CREATE_USERIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATE_USERID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CREATE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATE_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USERIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSERID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LASTUPDTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLASTUPDT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MEDOTHER_INSRow
            Get
                Return CType(Me.Rows(index),MEDOTHER_INSRow)
            End Get
        End Property
        
        Public Event MEDOTHER_INSRowChanging As MEDOTHER_INSRowChangeEventHandler
        
        Public Event MEDOTHER_INSRowChanged As MEDOTHER_INSRowChangeEventHandler
        
        Public Event MEDOTHER_INSRowDeleting As MEDOTHER_INSRowChangeEventHandler
        
        Public Event MEDOTHER_INSRowDeleted As MEDOTHER_INSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddMEDOTHER_INSRow(ByVal row As MEDOTHER_INSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddMEDOTHER_INSRow( _
                    ByVal FAMILY_ID As Integer,  _
                    ByVal RELATION_ID As Short,  _
                    ByVal OCC_FROM_DATE As Date,  _
                    ByVal OCC_TO_DATE As Date,  _
                    ByVal WORKING_SPOUSE_SW As Decimal,  _
                    ByVal OTH_INS_REFUSAL_SW As Decimal,  _
                    ByVal OTH_ID As String,  _
                    ByVal OTH_POLICY As String,  _
                    ByVal OTH_TAXID As Integer,  _
                    ByVal OTH_INSURER As Integer,  _
                    ByVal OTH_INSURER_PAT_ACCT_NBR As String,  _
                    ByVal OTH_CONTACT As String,  _
                    ByVal OTH_EMAIL As String,  _
                    ByVal OTH_PHONE1 As String,  _
                    ByVal OTH_PHONE2 As String,  _
                    ByVal OTH_NAME As String,  _
                    ByVal OTH_NAME2 As String,  _
                    ByVal OTH_ADDR1 As String,  _
                    ByVal OTH_ADDR2 As String,  _
                    ByVal OTH_CITY As String,  _
                    ByVal OTH_STATE As String,  _
                    ByVal OTH_ZIP As Integer,  _
                    ByVal OTH_ZIP2 As Short,  _
                    ByVal OTH_SSN As Integer,  _
                    ByVal OTH_FNAME As String,  _
                    ByVal OTH_LNAME As String,  _
                    ByVal OTH_SEX As String,  _
                    ByVal OTH_RELATION As String,  _
                    ByVal OTH_DOB As Date,  _
                    ByVal CREATE_USERID As String,  _
                    ByVal CREATE_DATE As Date,  _
                    ByVal USERID As String,  _
                    ByVal LASTUPDT As Date) As MEDOTHER_INSRow
            Dim rowMEDOTHER_INSRow As MEDOTHER_INSRow = CType(Me.NewRow,MEDOTHER_INSRow)
            Dim columnValuesArray() As Object = New Object() {FAMILY_ID, RELATION_ID, OCC_FROM_DATE, OCC_TO_DATE, WORKING_SPOUSE_SW, OTH_INS_REFUSAL_SW, OTH_ID, OTH_POLICY, OTH_TAXID, OTH_INSURER, OTH_INSURER_PAT_ACCT_NBR, OTH_CONTACT, OTH_EMAIL, OTH_PHONE1, OTH_PHONE2, OTH_NAME, OTH_NAME2, OTH_ADDR1, OTH_ADDR2, OTH_CITY, OTH_STATE, OTH_ZIP, OTH_ZIP2, OTH_SSN, OTH_FNAME, OTH_LNAME, OTH_SEX, OTH_RELATION, OTH_DOB, CREATE_USERID, CREATE_DATE, USERID, LASTUPDT}
            rowMEDOTHER_INSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMEDOTHER_INSRow)
            Return rowMEDOTHER_INSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByFAMILY_IDRELATION_IDOCC_FROM_DATEOCC_TO_DATE(ByVal FAMILY_ID As Integer, ByVal RELATION_ID As Short, ByVal OCC_FROM_DATE As Date, ByVal OCC_TO_DATE As Date) As MEDOTHER_INSRow
            Return CType(Me.Rows.Find(New Object() {FAMILY_ID, RELATION_ID, OCC_FROM_DATE, OCC_TO_DATE}),MEDOTHER_INSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MEDOTHER_INSDataTable = CType(MyBase.Clone,MEDOTHER_INSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MEDOTHER_INSDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnFAMILY_ID = MyBase.Columns("FAMILY_ID")
            Me.columnRELATION_ID = MyBase.Columns("RELATION_ID")
            Me.columnOCC_FROM_DATE = MyBase.Columns("OCC_FROM_DATE")
            Me.columnOCC_TO_DATE = MyBase.Columns("OCC_TO_DATE")
            Me.columnWORKING_SPOUSE_SW = MyBase.Columns("WORKING_SPOUSE_SW")
            Me.columnOTH_INS_REFUSAL_SW = MyBase.Columns("OTH_INS_REFUSAL_SW")
            Me.columnOTH_ID = MyBase.Columns("OTH_ID")
            Me.columnOTH_POLICY = MyBase.Columns("OTH_POLICY")
            Me.columnOTH_TAXID = MyBase.Columns("OTH_TAXID")
            Me.columnOTH_INSURER = MyBase.Columns("OTH_INSURER")
            Me.columnOTH_INSURER_PAT_ACCT_NBR = MyBase.Columns("OTH_INSURER_PAT_ACCT_NBR")
            Me.columnOTH_CONTACT = MyBase.Columns("OTH_CONTACT")
            Me.columnOTH_EMAIL = MyBase.Columns("OTH_EMAIL")
            Me.columnOTH_PHONE1 = MyBase.Columns("OTH_PHONE1")
            Me.columnOTH_PHONE2 = MyBase.Columns("OTH_PHONE2")
            Me.columnOTH_NAME = MyBase.Columns("OTH_NAME")
            Me.columnOTH_NAME2 = MyBase.Columns("OTH_NAME2")
            Me.columnOTH_ADDR1 = MyBase.Columns("OTH_ADDR1")
            Me.columnOTH_ADDR2 = MyBase.Columns("OTH_ADDR2")
            Me.columnOTH_CITY = MyBase.Columns("OTH_CITY")
            Me.columnOTH_STATE = MyBase.Columns("OTH_STATE")
            Me.columnOTH_ZIP = MyBase.Columns("OTH_ZIP")
            Me.columnOTH_ZIP2 = MyBase.Columns("OTH_ZIP2")
            Me.columnOTH_SSN = MyBase.Columns("OTH_SSN")
            Me.columnOTH_FNAME = MyBase.Columns("OTH_FNAME")
            Me.columnOTH_LNAME = MyBase.Columns("OTH_LNAME")
            Me.columnOTH_SEX = MyBase.Columns("OTH_SEX")
            Me.columnOTH_RELATION = MyBase.Columns("OTH_RELATION")
            Me.columnOTH_DOB = MyBase.Columns("OTH_DOB")
            Me.columnCREATE_USERID = MyBase.Columns("CREATE_USERID")
            Me.columnCREATE_DATE = MyBase.Columns("CREATE_DATE")
            Me.columnUSERID = MyBase.Columns("USERID")
            Me.columnLASTUPDT = MyBase.Columns("LASTUPDT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnFAMILY_ID = New Global.System.Data.DataColumn("FAMILY_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFAMILY_ID)
            Me.columnRELATION_ID = New Global.System.Data.DataColumn("RELATION_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRELATION_ID)
            Me.columnOCC_FROM_DATE = New Global.System.Data.DataColumn("OCC_FROM_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOCC_FROM_DATE)
            Me.columnOCC_TO_DATE = New Global.System.Data.DataColumn("OCC_TO_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOCC_TO_DATE)
            Me.columnWORKING_SPOUSE_SW = New Global.System.Data.DataColumn("WORKING_SPOUSE_SW", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWORKING_SPOUSE_SW)
            Me.columnOTH_INS_REFUSAL_SW = New Global.System.Data.DataColumn("OTH_INS_REFUSAL_SW", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTH_INS_REFUSAL_SW)
            Me.columnOTH_ID = New Global.System.Data.DataColumn("OTH_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTH_ID)
            Me.columnOTH_POLICY = New Global.System.Data.DataColumn("OTH_POLICY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTH_POLICY)
            Me.columnOTH_TAXID = New Global.System.Data.DataColumn("OTH_TAXID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTH_TAXID)
            Me.columnOTH_INSURER = New Global.System.Data.DataColumn("OTH_INSURER", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTH_INSURER)
            Me.columnOTH_INSURER_PAT_ACCT_NBR = New Global.System.Data.DataColumn("OTH_INSURER_PAT_ACCT_NBR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTH_INSURER_PAT_ACCT_NBR)
            Me.columnOTH_CONTACT = New Global.System.Data.DataColumn("OTH_CONTACT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTH_CONTACT)
            Me.columnOTH_EMAIL = New Global.System.Data.DataColumn("OTH_EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTH_EMAIL)
            Me.columnOTH_PHONE1 = New Global.System.Data.DataColumn("OTH_PHONE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTH_PHONE1)
            Me.columnOTH_PHONE2 = New Global.System.Data.DataColumn("OTH_PHONE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTH_PHONE2)
            Me.columnOTH_NAME = New Global.System.Data.DataColumn("OTH_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTH_NAME)
            Me.columnOTH_NAME2 = New Global.System.Data.DataColumn("OTH_NAME2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTH_NAME2)
            Me.columnOTH_ADDR1 = New Global.System.Data.DataColumn("OTH_ADDR1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTH_ADDR1)
            Me.columnOTH_ADDR2 = New Global.System.Data.DataColumn("OTH_ADDR2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTH_ADDR2)
            Me.columnOTH_CITY = New Global.System.Data.DataColumn("OTH_CITY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTH_CITY)
            Me.columnOTH_STATE = New Global.System.Data.DataColumn("OTH_STATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTH_STATE)
            Me.columnOTH_ZIP = New Global.System.Data.DataColumn("OTH_ZIP", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTH_ZIP)
            Me.columnOTH_ZIP2 = New Global.System.Data.DataColumn("OTH_ZIP2", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTH_ZIP2)
            Me.columnOTH_SSN = New Global.System.Data.DataColumn("OTH_SSN", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTH_SSN)
            Me.columnOTH_FNAME = New Global.System.Data.DataColumn("OTH_FNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTH_FNAME)
            Me.columnOTH_LNAME = New Global.System.Data.DataColumn("OTH_LNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTH_LNAME)
            Me.columnOTH_SEX = New Global.System.Data.DataColumn("OTH_SEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTH_SEX)
            Me.columnOTH_RELATION = New Global.System.Data.DataColumn("OTH_RELATION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTH_RELATION)
            Me.columnOTH_DOB = New Global.System.Data.DataColumn("OTH_DOB", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTH_DOB)
            Me.columnCREATE_USERID = New Global.System.Data.DataColumn("CREATE_USERID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATE_USERID)
            Me.columnCREATE_DATE = New Global.System.Data.DataColumn("CREATE_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATE_DATE)
            Me.columnUSERID = New Global.System.Data.DataColumn("USERID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSERID)
            Me.columnLASTUPDT = New Global.System.Data.DataColumn("LASTUPDT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLASTUPDT)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFAMILY_ID, Me.columnRELATION_ID, Me.columnOCC_FROM_DATE, Me.columnOCC_TO_DATE}, true))
            Me.columnFAMILY_ID.AllowDBNull = false
            Me.columnRELATION_ID.AllowDBNull = false
            Me.columnOCC_FROM_DATE.AllowDBNull = false
            Me.columnOCC_TO_DATE.AllowDBNull = false
            Me.columnWORKING_SPOUSE_SW.AllowDBNull = false
            Me.columnOTH_INS_REFUSAL_SW.AllowDBNull = false
            Me.columnOTH_ID.MaxLength = 30
            Me.columnOTH_POLICY.MaxLength = 30
            Me.columnOTH_INSURER_PAT_ACCT_NBR.MaxLength = 30
            Me.columnOTH_CONTACT.MaxLength = 40
            Me.columnOTH_EMAIL.MaxLength = 60
            Me.columnOTH_PHONE1.MaxLength = 25
            Me.columnOTH_PHONE2.MaxLength = 25
            Me.columnOTH_NAME.MaxLength = 40
            Me.columnOTH_NAME2.MaxLength = 40
            Me.columnOTH_ADDR1.MaxLength = 55
            Me.columnOTH_ADDR2.MaxLength = 55
            Me.columnOTH_CITY.MaxLength = 35
            Me.columnOTH_STATE.MaxLength = 2
            Me.columnOTH_FNAME.MaxLength = 40
            Me.columnOTH_LNAME.MaxLength = 40
            Me.columnOTH_SEX.MaxLength = 1
            Me.columnOTH_RELATION.MaxLength = 1
            Me.columnCREATE_USERID.AllowDBNull = false
            Me.columnCREATE_USERID.MaxLength = 40
            Me.columnCREATE_DATE.AllowDBNull = false
            Me.columnUSERID.AllowDBNull = false
            Me.columnUSERID.MaxLength = 40
            Me.columnLASTUPDT.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewMEDOTHER_INSRow() As MEDOTHER_INSRow
            Return CType(Me.NewRow,MEDOTHER_INSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MEDOTHER_INSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MEDOTHER_INSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MEDOTHER_INSRowChangedEvent) Is Nothing) Then
                RaiseEvent MEDOTHER_INSRowChanged(Me, New MEDOTHER_INSRowChangeEvent(CType(e.Row,MEDOTHER_INSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MEDOTHER_INSRowChangingEvent) Is Nothing) Then
                RaiseEvent MEDOTHER_INSRowChanging(Me, New MEDOTHER_INSRowChangeEvent(CType(e.Row,MEDOTHER_INSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MEDOTHER_INSRowDeletedEvent) Is Nothing) Then
                RaiseEvent MEDOTHER_INSRowDeleted(Me, New MEDOTHER_INSRowChangeEvent(CType(e.Row,MEDOTHER_INSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MEDOTHER_INSRowDeletingEvent) Is Nothing) Then
                RaiseEvent MEDOTHER_INSRowDeleting(Me, New MEDOTHER_INSRowChangeEvent(CType(e.Row,MEDOTHER_INSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveMEDOTHER_INSRow(ByVal row As MEDOTHER_INSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As OtherInsuranceDataSet = New OtherInsuranceDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MEDOTHER_INSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class MEDOTHER_INSRow
        Inherits Global.System.Data.DataRow
        
        Private tableMEDOTHER_INS As MEDOTHER_INSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMEDOTHER_INS = CType(Me.Table,MEDOTHER_INSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FAMILY_ID() As Integer
            Get
                Return CType(Me(Me.tableMEDOTHER_INS.FAMILY_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.FAMILY_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RELATION_ID() As Short
            Get
                Return CType(Me(Me.tableMEDOTHER_INS.RELATION_IDColumn),Short)
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.RELATION_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OCC_FROM_DATE() As Date
            Get
                Return CType(Me(Me.tableMEDOTHER_INS.OCC_FROM_DATEColumn),Date)
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.OCC_FROM_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OCC_TO_DATE() As Date
            Get
                Return CType(Me(Me.tableMEDOTHER_INS.OCC_TO_DATEColumn),Date)
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.OCC_TO_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property WORKING_SPOUSE_SW() As Decimal
            Get
                Return CType(Me(Me.tableMEDOTHER_INS.WORKING_SPOUSE_SWColumn),Decimal)
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.WORKING_SPOUSE_SWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTH_INS_REFUSAL_SW() As Decimal
            Get
                Return CType(Me(Me.tableMEDOTHER_INS.OTH_INS_REFUSAL_SWColumn),Decimal)
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.OTH_INS_REFUSAL_SWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTH_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableMEDOTHER_INS.OTH_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTH_ID' in table 'MEDOTHER_INS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.OTH_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTH_POLICY() As String
            Get
                Try 
                    Return CType(Me(Me.tableMEDOTHER_INS.OTH_POLICYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTH_POLICY' in table 'MEDOTHER_INS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.OTH_POLICYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTH_TAXID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMEDOTHER_INS.OTH_TAXIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTH_TAXID' in table 'MEDOTHER_INS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.OTH_TAXIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTH_INSURER() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMEDOTHER_INS.OTH_INSURERColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTH_INSURER' in table 'MEDOTHER_INS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.OTH_INSURERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTH_INSURER_PAT_ACCT_NBR() As String
            Get
                Try 
                    Return CType(Me(Me.tableMEDOTHER_INS.OTH_INSURER_PAT_ACCT_NBRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTH_INSURER_PAT_ACCT_NBR' in table 'MEDOTHER_INS' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.OTH_INSURER_PAT_ACCT_NBRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTH_CONTACT() As String
            Get
                Try 
                    Return CType(Me(Me.tableMEDOTHER_INS.OTH_CONTACTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTH_CONTACT' in table 'MEDOTHER_INS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.OTH_CONTACTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTH_EMAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableMEDOTHER_INS.OTH_EMAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTH_EMAIL' in table 'MEDOTHER_INS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.OTH_EMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTH_PHONE1() As String
            Get
                Try 
                    Return CType(Me(Me.tableMEDOTHER_INS.OTH_PHONE1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTH_PHONE1' in table 'MEDOTHER_INS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.OTH_PHONE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTH_PHONE2() As String
            Get
                Try 
                    Return CType(Me(Me.tableMEDOTHER_INS.OTH_PHONE2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTH_PHONE2' in table 'MEDOTHER_INS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.OTH_PHONE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTH_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableMEDOTHER_INS.OTH_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTH_NAME' in table 'MEDOTHER_INS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.OTH_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTH_NAME2() As String
            Get
                Try 
                    Return CType(Me(Me.tableMEDOTHER_INS.OTH_NAME2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTH_NAME2' in table 'MEDOTHER_INS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.OTH_NAME2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTH_ADDR1() As String
            Get
                Try 
                    Return CType(Me(Me.tableMEDOTHER_INS.OTH_ADDR1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTH_ADDR1' in table 'MEDOTHER_INS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.OTH_ADDR1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTH_ADDR2() As String
            Get
                Try 
                    Return CType(Me(Me.tableMEDOTHER_INS.OTH_ADDR2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTH_ADDR2' in table 'MEDOTHER_INS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.OTH_ADDR2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTH_CITY() As String
            Get
                Try 
                    Return CType(Me(Me.tableMEDOTHER_INS.OTH_CITYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTH_CITY' in table 'MEDOTHER_INS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.OTH_CITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTH_STATE() As String
            Get
                Try 
                    Return CType(Me(Me.tableMEDOTHER_INS.OTH_STATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTH_STATE' in table 'MEDOTHER_INS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.OTH_STATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTH_ZIP() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMEDOTHER_INS.OTH_ZIPColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTH_ZIP' in table 'MEDOTHER_INS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.OTH_ZIPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTH_ZIP2() As Short
            Get
                Try 
                    Return CType(Me(Me.tableMEDOTHER_INS.OTH_ZIP2Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTH_ZIP2' in table 'MEDOTHER_INS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.OTH_ZIP2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTH_SSN() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMEDOTHER_INS.OTH_SSNColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTH_SSN' in table 'MEDOTHER_INS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.OTH_SSNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTH_FNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableMEDOTHER_INS.OTH_FNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTH_FNAME' in table 'MEDOTHER_INS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.OTH_FNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTH_LNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableMEDOTHER_INS.OTH_LNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTH_LNAME' in table 'MEDOTHER_INS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.OTH_LNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTH_SEX() As String
            Get
                Try 
                    Return CType(Me(Me.tableMEDOTHER_INS.OTH_SEXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTH_SEX' in table 'MEDOTHER_INS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.OTH_SEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTH_RELATION() As String
            Get
                Try 
                    Return CType(Me(Me.tableMEDOTHER_INS.OTH_RELATIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTH_RELATION' in table 'MEDOTHER_INS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.OTH_RELATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTH_DOB() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMEDOTHER_INS.OTH_DOBColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTH_DOB' in table 'MEDOTHER_INS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.OTH_DOBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CREATE_USERID() As String
            Get
                Return CType(Me(Me.tableMEDOTHER_INS.CREATE_USERIDColumn),String)
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.CREATE_USERIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CREATE_DATE() As Date
            Get
                Return CType(Me(Me.tableMEDOTHER_INS.CREATE_DATEColumn),Date)
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.CREATE_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USERID() As String
            Get
                Return CType(Me(Me.tableMEDOTHER_INS.USERIDColumn),String)
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.USERIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LASTUPDT() As Date
            Get
                Return CType(Me(Me.tableMEDOTHER_INS.LASTUPDTColumn),Date)
            End Get
            Set
                Me(Me.tableMEDOTHER_INS.LASTUPDTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTH_IDNull() As Boolean
            Return Me.IsNull(Me.tableMEDOTHER_INS.OTH_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTH_IDNull()
            Me(Me.tableMEDOTHER_INS.OTH_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTH_POLICYNull() As Boolean
            Return Me.IsNull(Me.tableMEDOTHER_INS.OTH_POLICYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTH_POLICYNull()
            Me(Me.tableMEDOTHER_INS.OTH_POLICYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTH_TAXIDNull() As Boolean
            Return Me.IsNull(Me.tableMEDOTHER_INS.OTH_TAXIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTH_TAXIDNull()
            Me(Me.tableMEDOTHER_INS.OTH_TAXIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTH_INSURERNull() As Boolean
            Return Me.IsNull(Me.tableMEDOTHER_INS.OTH_INSURERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTH_INSURERNull()
            Me(Me.tableMEDOTHER_INS.OTH_INSURERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTH_INSURER_PAT_ACCT_NBRNull() As Boolean
            Return Me.IsNull(Me.tableMEDOTHER_INS.OTH_INSURER_PAT_ACCT_NBRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTH_INSURER_PAT_ACCT_NBRNull()
            Me(Me.tableMEDOTHER_INS.OTH_INSURER_PAT_ACCT_NBRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTH_CONTACTNull() As Boolean
            Return Me.IsNull(Me.tableMEDOTHER_INS.OTH_CONTACTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTH_CONTACTNull()
            Me(Me.tableMEDOTHER_INS.OTH_CONTACTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTH_EMAILNull() As Boolean
            Return Me.IsNull(Me.tableMEDOTHER_INS.OTH_EMAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTH_EMAILNull()
            Me(Me.tableMEDOTHER_INS.OTH_EMAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTH_PHONE1Null() As Boolean
            Return Me.IsNull(Me.tableMEDOTHER_INS.OTH_PHONE1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTH_PHONE1Null()
            Me(Me.tableMEDOTHER_INS.OTH_PHONE1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTH_PHONE2Null() As Boolean
            Return Me.IsNull(Me.tableMEDOTHER_INS.OTH_PHONE2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTH_PHONE2Null()
            Me(Me.tableMEDOTHER_INS.OTH_PHONE2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTH_NAMENull() As Boolean
            Return Me.IsNull(Me.tableMEDOTHER_INS.OTH_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTH_NAMENull()
            Me(Me.tableMEDOTHER_INS.OTH_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTH_NAME2Null() As Boolean
            Return Me.IsNull(Me.tableMEDOTHER_INS.OTH_NAME2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTH_NAME2Null()
            Me(Me.tableMEDOTHER_INS.OTH_NAME2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTH_ADDR1Null() As Boolean
            Return Me.IsNull(Me.tableMEDOTHER_INS.OTH_ADDR1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTH_ADDR1Null()
            Me(Me.tableMEDOTHER_INS.OTH_ADDR1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTH_ADDR2Null() As Boolean
            Return Me.IsNull(Me.tableMEDOTHER_INS.OTH_ADDR2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTH_ADDR2Null()
            Me(Me.tableMEDOTHER_INS.OTH_ADDR2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTH_CITYNull() As Boolean
            Return Me.IsNull(Me.tableMEDOTHER_INS.OTH_CITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTH_CITYNull()
            Me(Me.tableMEDOTHER_INS.OTH_CITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTH_STATENull() As Boolean
            Return Me.IsNull(Me.tableMEDOTHER_INS.OTH_STATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTH_STATENull()
            Me(Me.tableMEDOTHER_INS.OTH_STATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTH_ZIPNull() As Boolean
            Return Me.IsNull(Me.tableMEDOTHER_INS.OTH_ZIPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTH_ZIPNull()
            Me(Me.tableMEDOTHER_INS.OTH_ZIPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTH_ZIP2Null() As Boolean
            Return Me.IsNull(Me.tableMEDOTHER_INS.OTH_ZIP2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTH_ZIP2Null()
            Me(Me.tableMEDOTHER_INS.OTH_ZIP2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTH_SSNNull() As Boolean
            Return Me.IsNull(Me.tableMEDOTHER_INS.OTH_SSNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTH_SSNNull()
            Me(Me.tableMEDOTHER_INS.OTH_SSNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTH_FNAMENull() As Boolean
            Return Me.IsNull(Me.tableMEDOTHER_INS.OTH_FNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTH_FNAMENull()
            Me(Me.tableMEDOTHER_INS.OTH_FNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTH_LNAMENull() As Boolean
            Return Me.IsNull(Me.tableMEDOTHER_INS.OTH_LNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTH_LNAMENull()
            Me(Me.tableMEDOTHER_INS.OTH_LNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTH_SEXNull() As Boolean
            Return Me.IsNull(Me.tableMEDOTHER_INS.OTH_SEXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTH_SEXNull()
            Me(Me.tableMEDOTHER_INS.OTH_SEXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTH_RELATIONNull() As Boolean
            Return Me.IsNull(Me.tableMEDOTHER_INS.OTH_RELATIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTH_RELATIONNull()
            Me(Me.tableMEDOTHER_INS.OTH_RELATIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTH_DOBNull() As Boolean
            Return Me.IsNull(Me.tableMEDOTHER_INS.OTH_DOBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTH_DOBNull()
            Me(Me.tableMEDOTHER_INS.OTH_DOBColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class MEDOTHER_INSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MEDOTHER_INSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As MEDOTHER_INSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As MEDOTHER_INSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
