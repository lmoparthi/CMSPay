'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("HoursDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class HoursDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableREG_MASTER As REG_MASTERDataTable
    
    Private tableHRSDTL As HRSDTLDataTable
    
    Private tableEMPLOYERS As EMPLOYERSDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("REG_MASTER")) Is Nothing) Then
                MyBase.Tables.Add(New REG_MASTERDataTable(ds.Tables("REG_MASTER")))
            End If
            If (Not (ds.Tables("HRSDTL")) Is Nothing) Then
                MyBase.Tables.Add(New HRSDTLDataTable(ds.Tables("HRSDTL")))
            End If
            If (Not (ds.Tables("EMPLOYERS")) Is Nothing) Then
                MyBase.Tables.Add(New EMPLOYERSDataTable(ds.Tables("EMPLOYERS")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REG_MASTER() As REG_MASTERDataTable
        Get
            Return Me.tableREG_MASTER
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property HRSDTL() As HRSDTLDataTable
        Get
            Return Me.tableHRSDTL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property EMPLOYERS() As EMPLOYERSDataTable
        Get
            Return Me.tableEMPLOYERS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As HoursDataSet = CType(MyBase.Clone,HoursDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("REG_MASTER")) Is Nothing) Then
                MyBase.Tables.Add(New REG_MASTERDataTable(ds.Tables("REG_MASTER")))
            End If
            If (Not (ds.Tables("HRSDTL")) Is Nothing) Then
                MyBase.Tables.Add(New HRSDTLDataTable(ds.Tables("HRSDTL")))
            End If
            If (Not (ds.Tables("EMPLOYERS")) Is Nothing) Then
                MyBase.Tables.Add(New EMPLOYERSDataTable(ds.Tables("EMPLOYERS")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableREG_MASTER = CType(MyBase.Tables("REG_MASTER"),REG_MASTERDataTable)
        If (initTable = true) Then
            If (Not (Me.tableREG_MASTER) Is Nothing) Then
                Me.tableREG_MASTER.InitVars
            End If
        End If
        Me.tableHRSDTL = CType(MyBase.Tables("HRSDTL"),HRSDTLDataTable)
        If (initTable = true) Then
            If (Not (Me.tableHRSDTL) Is Nothing) Then
                Me.tableHRSDTL.InitVars
            End If
        End If
        Me.tableEMPLOYERS = CType(MyBase.Tables("EMPLOYERS"),EMPLOYERSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableEMPLOYERS) Is Nothing) Then
                Me.tableEMPLOYERS.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "HoursDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/HoursDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableREG_MASTER = New REG_MASTERDataTable()
        MyBase.Tables.Add(Me.tableREG_MASTER)
        Me.tableHRSDTL = New HRSDTLDataTable()
        MyBase.Tables.Add(Me.tableHRSDTL)
        Me.tableEMPLOYERS = New EMPLOYERSDataTable()
        MyBase.Tables.Add(Me.tableEMPLOYERS)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeREG_MASTER() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeHRSDTL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeEMPLOYERS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As HoursDataSet = New HoursDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub REG_MASTERRowChangeEventHandler(ByVal sender As Object, ByVal e As REG_MASTERRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub HRSDTLRowChangeEventHandler(ByVal sender As Object, ByVal e As HRSDTLRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub EMPLOYERSRowChangeEventHandler(ByVal sender As Object, ByVal e As EMPLOYERSRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REG_MASTERDataTable
        Inherits Global.System.Data.TypedTableBase(Of REG_MASTERRow)
        
        Private columnFAMILY_ID As Global.System.Data.DataColumn
        
        Private columnRELATION_ID As Global.System.Data.DataColumn
        
        Private columnFROM_DATE As Global.System.Data.DataColumn
        
        Private columnTHRU_DATE As Global.System.Data.DataColumn
        
        Private columnSSNO As Global.System.Data.DataColumn
        
        Private columnPART_SSNO As Global.System.Data.DataColumn
        
        Private columnRELATION As Global.System.Data.DataColumn
        
        Private columnSURVIVING_SPOUSE_SW As Global.System.Data.DataColumn
        
        Private columnSTEP_SW As Global.System.Data.DataColumn
        
        Private columnFOSTER_SW As Global.System.Data.DataColumn
        
        Private columnDISABLE_SW As Global.System.Data.DataColumn
        
        Private columnSTUDENT_SW As Global.System.Data.DataColumn
        
        Private columnELIG_PERIOD As Global.System.Data.DataColumn
        
        Private columnSTATUS As Global.System.Data.DataColumn
        
        Private columnPLANTYPE As Global.System.Data.DataColumn
        
        Private columnMEMTYPE As Global.System.Data.DataColumn
        
        Private columnMEMDESC As Global.System.Data.DataColumn
        
        Private columnMEMCLASS As Global.System.Data.DataColumn
        
        Private columnMEDICAL_PLAN As Global.System.Data.DataColumn
        
        Private columnDESCRIPTION As Global.System.Data.DataColumn
        
        Private columnMED_ELIG_SW As Global.System.Data.DataColumn
        
        Private columnDEN_ELIG_SW As Global.System.Data.DataColumn
        
        Private columnFAMILY_SW As Global.System.Data.DataColumn
        
        Private columnPREMIUM_SW As Global.System.Data.DataColumn
        
        Private columnPLAN_TYPE As Global.System.Data.DataColumn
        
        Private columnPLAN_DESCRIPTION As Global.System.Data.DataColumn
        
        Private columnPREM_TYPE As Global.System.Data.DataColumn
        
        Private columnBAL_MED As Global.System.Data.DataColumn
        
        Private columnIcon As Global.System.Data.DataColumn
        
        Private columnType As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REG_MASTER"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FAMILY_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFAMILY_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RELATION_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRELATION_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FROM_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFROM_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property THRU_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTHRU_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SSNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSSNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PART_SSNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPART_SSNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RELATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRELATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SURVIVING_SPOUSE_SWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSURVIVING_SPOUSE_SW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property STEP_SWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTEP_SW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FOSTER_SWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFOSTER_SW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DISABLE_SWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISABLE_SW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property STUDENT_SWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTUDENT_SW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ELIG_PERIODColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnELIG_PERIOD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PLANTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLANTYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MEMTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMTYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MEMDESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMDESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MEMCLASSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMCLASS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MEDICAL_PLANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEDICAL_PLAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MED_ELIG_SWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMED_ELIG_SW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DEN_ELIG_SWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEN_ELIG_SW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FAMILY_SWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFAMILY_SW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PREMIUM_SWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPREMIUM_SW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PLAN_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLAN_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PLAN_DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLAN_DESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PREM_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPREM_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BAL_MEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBAL_MED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property IconColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIcon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REG_MASTERRow
            Get
                Return CType(Me.Rows(index),REG_MASTERRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event REG_MASTERRowChanging As REG_MASTERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event REG_MASTERRowChanged As REG_MASTERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event REG_MASTERRowDeleting As REG_MASTERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event REG_MASTERRowDeleted As REG_MASTERRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddREG_MASTERRow(ByVal row As REG_MASTERRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddREG_MASTERRow( _
                    ByVal FAMILY_ID As Decimal,  _
                    ByVal RELATION_ID As Decimal,  _
                    ByVal FROM_DATE As Date,  _
                    ByVal THRU_DATE As Date,  _
                    ByVal SSNO As Decimal,  _
                    ByVal PART_SSNO As Decimal,  _
                    ByVal RELATION As String,  _
                    ByVal SURVIVING_SPOUSE_SW As Boolean,  _
                    ByVal STEP_SW As Boolean,  _
                    ByVal FOSTER_SW As Boolean,  _
                    ByVal DISABLE_SW As Boolean,  _
                    ByVal STUDENT_SW As Boolean,  _
                    ByVal ELIG_PERIOD As Date,  _
                    ByVal STATUS As String,  _
                    ByVal PLANTYPE As String,  _
                    ByVal MEMTYPE As String,  _
                    ByVal MEMDESC As String,  _
                    ByVal MEMCLASS As String,  _
                    ByVal MEDICAL_PLAN As Decimal,  _
                    ByVal DESCRIPTION As String,  _
                    ByVal MED_ELIG_SW As Boolean,  _
                    ByVal DEN_ELIG_SW As Boolean,  _
                    ByVal FAMILY_SW As Boolean,  _
                    ByVal PREMIUM_SW As Boolean,  _
                    ByVal PLAN_TYPE As String,  _
                    ByVal PLAN_DESCRIPTION As String,  _
                    ByVal PREM_TYPE As String,  _
                    ByVal BAL_MED As String,  _
                    ByVal Icon As String,  _
                    ByVal Type As String) As REG_MASTERRow
            Dim rowREG_MASTERRow As REG_MASTERRow = CType(Me.NewRow,REG_MASTERRow)
            Dim columnValuesArray() As Object = New Object() {FAMILY_ID, RELATION_ID, FROM_DATE, THRU_DATE, SSNO, PART_SSNO, RELATION, SURVIVING_SPOUSE_SW, STEP_SW, FOSTER_SW, DISABLE_SW, STUDENT_SW, ELIG_PERIOD, STATUS, PLANTYPE, MEMTYPE, MEMDESC, MEMCLASS, MEDICAL_PLAN, DESCRIPTION, MED_ELIG_SW, DEN_ELIG_SW, FAMILY_SW, PREMIUM_SW, PLAN_TYPE, PLAN_DESCRIPTION, PREM_TYPE, BAL_MED, Icon, Type}
            rowREG_MASTERRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowREG_MASTERRow)
            Return rowREG_MASTERRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REG_MASTERDataTable = CType(MyBase.Clone,REG_MASTERDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REG_MASTERDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFAMILY_ID = MyBase.Columns("FAMILY_ID")
            Me.columnRELATION_ID = MyBase.Columns("RELATION_ID")
            Me.columnFROM_DATE = MyBase.Columns("FROM_DATE")
            Me.columnTHRU_DATE = MyBase.Columns("THRU_DATE")
            Me.columnSSNO = MyBase.Columns("SSNO")
            Me.columnPART_SSNO = MyBase.Columns("PART_SSNO")
            Me.columnRELATION = MyBase.Columns("RELATION")
            Me.columnSURVIVING_SPOUSE_SW = MyBase.Columns("SURVIVING_SPOUSE_SW")
            Me.columnSTEP_SW = MyBase.Columns("STEP_SW")
            Me.columnFOSTER_SW = MyBase.Columns("FOSTER_SW")
            Me.columnDISABLE_SW = MyBase.Columns("DISABLE_SW")
            Me.columnSTUDENT_SW = MyBase.Columns("STUDENT_SW")
            Me.columnELIG_PERIOD = MyBase.Columns("ELIG_PERIOD")
            Me.columnSTATUS = MyBase.Columns("STATUS")
            Me.columnPLANTYPE = MyBase.Columns("PLANTYPE")
            Me.columnMEMTYPE = MyBase.Columns("MEMTYPE")
            Me.columnMEMDESC = MyBase.Columns("MEMDESC")
            Me.columnMEMCLASS = MyBase.Columns("MEMCLASS")
            Me.columnMEDICAL_PLAN = MyBase.Columns("MEDICAL_PLAN")
            Me.columnDESCRIPTION = MyBase.Columns("DESCRIPTION")
            Me.columnMED_ELIG_SW = MyBase.Columns("MED_ELIG_SW")
            Me.columnDEN_ELIG_SW = MyBase.Columns("DEN_ELIG_SW")
            Me.columnFAMILY_SW = MyBase.Columns("FAMILY_SW")
            Me.columnPREMIUM_SW = MyBase.Columns("PREMIUM_SW")
            Me.columnPLAN_TYPE = MyBase.Columns("PLAN_TYPE")
            Me.columnPLAN_DESCRIPTION = MyBase.Columns("PLAN_DESCRIPTION")
            Me.columnPREM_TYPE = MyBase.Columns("PREM_TYPE")
            Me.columnBAL_MED = MyBase.Columns("BAL_MED")
            Me.columnIcon = MyBase.Columns("Icon")
            Me.columnType = MyBase.Columns("Type")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFAMILY_ID = New Global.System.Data.DataColumn("FAMILY_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFAMILY_ID)
            Me.columnRELATION_ID = New Global.System.Data.DataColumn("RELATION_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRELATION_ID)
            Me.columnFROM_DATE = New Global.System.Data.DataColumn("FROM_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFROM_DATE)
            Me.columnTHRU_DATE = New Global.System.Data.DataColumn("THRU_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTHRU_DATE)
            Me.columnSSNO = New Global.System.Data.DataColumn("SSNO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSSNO)
            Me.columnPART_SSNO = New Global.System.Data.DataColumn("PART_SSNO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPART_SSNO)
            Me.columnRELATION = New Global.System.Data.DataColumn("RELATION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRELATION)
            Me.columnSURVIVING_SPOUSE_SW = New Global.System.Data.DataColumn("SURVIVING_SPOUSE_SW", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSURVIVING_SPOUSE_SW)
            Me.columnSTEP_SW = New Global.System.Data.DataColumn("STEP_SW", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTEP_SW)
            Me.columnFOSTER_SW = New Global.System.Data.DataColumn("FOSTER_SW", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFOSTER_SW)
            Me.columnDISABLE_SW = New Global.System.Data.DataColumn("DISABLE_SW", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISABLE_SW)
            Me.columnSTUDENT_SW = New Global.System.Data.DataColumn("STUDENT_SW", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTUDENT_SW)
            Me.columnELIG_PERIOD = New Global.System.Data.DataColumn("ELIG_PERIOD", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnELIG_PERIOD)
            Me.columnSTATUS = New Global.System.Data.DataColumn("STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTATUS)
            Me.columnPLANTYPE = New Global.System.Data.DataColumn("PLANTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLANTYPE)
            Me.columnMEMTYPE = New Global.System.Data.DataColumn("MEMTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMTYPE)
            Me.columnMEMDESC = New Global.System.Data.DataColumn("MEMDESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMDESC)
            Me.columnMEMCLASS = New Global.System.Data.DataColumn("MEMCLASS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMCLASS)
            Me.columnMEDICAL_PLAN = New Global.System.Data.DataColumn("MEDICAL_PLAN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEDICAL_PLAN)
            Me.columnDESCRIPTION = New Global.System.Data.DataColumn("DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPTION)
            Me.columnMED_ELIG_SW = New Global.System.Data.DataColumn("MED_ELIG_SW", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMED_ELIG_SW)
            Me.columnDEN_ELIG_SW = New Global.System.Data.DataColumn("DEN_ELIG_SW", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEN_ELIG_SW)
            Me.columnFAMILY_SW = New Global.System.Data.DataColumn("FAMILY_SW", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFAMILY_SW)
            Me.columnPREMIUM_SW = New Global.System.Data.DataColumn("PREMIUM_SW", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPREMIUM_SW)
            Me.columnPLAN_TYPE = New Global.System.Data.DataColumn("PLAN_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLAN_TYPE)
            Me.columnPLAN_DESCRIPTION = New Global.System.Data.DataColumn("PLAN_DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLAN_DESCRIPTION)
            Me.columnPREM_TYPE = New Global.System.Data.DataColumn("PREM_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPREM_TYPE)
            Me.columnBAL_MED = New Global.System.Data.DataColumn("BAL_MED", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBAL_MED)
            Me.columnIcon = New Global.System.Data.DataColumn("Icon", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIcon)
            Me.columnType = New Global.System.Data.DataColumn("Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnType)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("EligibilityDataSetKey1", New Global.System.Data.DataColumn() {Me.columnFAMILY_ID, Me.columnRELATION_ID, Me.columnELIG_PERIOD}, false))
            Me.columnFAMILY_ID.AllowDBNull = false
            Me.columnRELATION_ID.AllowDBNull = false
            Me.columnFROM_DATE.AllowDBNull = false
            Me.columnTHRU_DATE.AllowDBNull = false
            Me.columnPART_SSNO.AllowDBNull = false
            Me.columnRELATION.AllowDBNull = false
            Me.columnSURVIVING_SPOUSE_SW.AllowDBNull = false
            Me.columnSTEP_SW.AllowDBNull = false
            Me.columnFOSTER_SW.AllowDBNull = false
            Me.columnDISABLE_SW.AllowDBNull = false
            Me.columnSTUDENT_SW.AllowDBNull = false
            Me.columnELIG_PERIOD.AllowDBNull = false
            Me.columnSTATUS.AllowDBNull = false
            Me.columnPLANTYPE.ReadOnly = true
            Me.columnMEMTYPE.ReadOnly = true
            Me.columnMEMDESC.ReadOnly = true
            Me.columnMEMCLASS.ReadOnly = true
            Me.columnMEDICAL_PLAN.AllowDBNull = false
            Me.columnMED_ELIG_SW.AllowDBNull = false
            Me.columnDEN_ELIG_SW.AllowDBNull = false
            Me.columnFAMILY_SW.AllowDBNull = false
            Me.columnPREMIUM_SW.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewREG_MASTERRow() As REG_MASTERRow
            Return CType(Me.NewRow,REG_MASTERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REG_MASTERRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REG_MASTERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REG_MASTERRowChangedEvent) Is Nothing) Then
                RaiseEvent REG_MASTERRowChanged(Me, New REG_MASTERRowChangeEvent(CType(e.Row,REG_MASTERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REG_MASTERRowChangingEvent) Is Nothing) Then
                RaiseEvent REG_MASTERRowChanging(Me, New REG_MASTERRowChangeEvent(CType(e.Row,REG_MASTERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REG_MASTERRowDeletedEvent) Is Nothing) Then
                RaiseEvent REG_MASTERRowDeleted(Me, New REG_MASTERRowChangeEvent(CType(e.Row,REG_MASTERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REG_MASTERRowDeletingEvent) Is Nothing) Then
                RaiseEvent REG_MASTERRowDeleting(Me, New REG_MASTERRowChangeEvent(CType(e.Row,REG_MASTERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveREG_MASTERRow(ByVal row As REG_MASTERRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As HoursDataSet = New HoursDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REG_MASTERDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class HRSDTLDataTable
        Inherits Global.System.Data.TypedTableBase(Of HRSDTLRow)
        
        Private columnEMPRNO As Global.System.Data.DataColumn
        
        Private columnEMPRSUB As Global.System.Data.DataColumn
        
        Private columnPLANTYPE As Global.System.Data.DataColumn
        
        Private columnMEMTYPE As Global.System.Data.DataColumn
        
        Private columnMEMCLASS As Global.System.Data.DataColumn
        
        Private columnWRKPERIOD As Global.System.Data.DataColumn
        
        Private columnSSNO As Global.System.Data.DataColumn
        
        Private columnPSTPERIOD As Global.System.Data.DataColumn
        
        Private columnFIRST99 As Global.System.Data.DataColumn
        
        Private columnOVER99 As Global.System.Data.DataColumn
        
        Private columnTVHRS As Global.System.Data.DataColumn
        
        Private columnFAMLVE_HRS As Global.System.Data.DataColumn
        
        Private columnFNAME As Global.System.Data.DataColumn
        
        Private columnLNAME As Global.System.Data.DataColumn
        
        Private columnTERMDATE As Global.System.Data.DataColumn
        
        Private columnACCTNO As Global.System.Data.DataColumn
        
        Private columnLOCALNO As Global.System.Data.DataColumn
        
        Private columnSTORENO As Global.System.Data.DataColumn
        
        Private columnSOURCE As Global.System.Data.DataColumn
        
        Private columnPROCESS As Global.System.Data.DataColumn
        
        Private columnORIG_POSTING As Global.System.Data.DataColumn
        
        Private columnUSERID As Global.System.Data.DataColumn
        
        Private columnLASTUPDT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "HRSDTL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EMPRNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMPRNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EMPRSUBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMPRSUB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PLANTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLANTYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MEMTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMTYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MEMCLASSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMCLASS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WRKPERIODColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWRKPERIOD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SSNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSSNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PSTPERIODColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPSTPERIOD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FIRST99Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRST99
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OVER99Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOVER99
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TVHRSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTVHRS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FAMLVE_HRSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFAMLVE_HRS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TERMDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTERMDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ACCTNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACCTNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LOCALNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOCALNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property STORENOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTORENO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SOURCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSOURCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PROCESSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROCESS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ORIG_POSTINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORIG_POSTING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property USERIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSERID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LASTUPDTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLASTUPDT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As HRSDTLRow
            Get
                Return CType(Me.Rows(index),HRSDTLRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event HRSDTLRowChanging As HRSDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event HRSDTLRowChanged As HRSDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event HRSDTLRowDeleting As HRSDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event HRSDTLRowDeleted As HRSDTLRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddHRSDTLRow(ByVal row As HRSDTLRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddHRSDTLRow( _
                    ByVal EMPRNO As Integer,  _
                    ByVal EMPRSUB As Short,  _
                    ByVal PLANTYPE As String,  _
                    ByVal MEMTYPE As String,  _
                    ByVal MEMCLASS As String,  _
                    ByVal WRKPERIOD As Date,  _
                    ByVal SSNO As Integer,  _
                    ByVal PSTPERIOD As Date,  _
                    ByVal FIRST99 As Decimal,  _
                    ByVal OVER99 As Decimal,  _
                    ByVal TVHRS As Decimal,  _
                    ByVal FAMLVE_HRS As Decimal,  _
                    ByVal FNAME As String,  _
                    ByVal LNAME As String,  _
                    ByVal TERMDATE As Date,  _
                    ByVal ACCTNO As Short,  _
                    ByVal LOCALNO As Short,  _
                    ByVal STORENO As Short,  _
                    ByVal SOURCE As String,  _
                    ByVal PROCESS As String,  _
                    ByVal ORIG_POSTING As Date,  _
                    ByVal USERID As String,  _
                    ByVal LASTUPDT As Date) As HRSDTLRow
            Dim rowHRSDTLRow As HRSDTLRow = CType(Me.NewRow,HRSDTLRow)
            Dim columnValuesArray() As Object = New Object() {EMPRNO, EMPRSUB, PLANTYPE, MEMTYPE, MEMCLASS, WRKPERIOD, SSNO, PSTPERIOD, FIRST99, OVER99, TVHRS, FAMLVE_HRS, FNAME, LNAME, TERMDATE, ACCTNO, LOCALNO, STORENO, SOURCE, PROCESS, ORIG_POSTING, USERID, LASTUPDT}
            rowHRSDTLRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowHRSDTLRow)
            Return rowHRSDTLRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByEMPRNOEMPRSUBPLANTYPEMEMTYPEMEMCLASSWRKPERIODSSNOPSTPERIOD(ByVal EMPRNO As Integer, ByVal EMPRSUB As Short, ByVal PLANTYPE As String, ByVal MEMTYPE As String, ByVal MEMCLASS As String, ByVal WRKPERIOD As Date, ByVal SSNO As Integer, ByVal PSTPERIOD As Date) As HRSDTLRow
            Return CType(Me.Rows.Find(New Object() {EMPRNO, EMPRSUB, PLANTYPE, MEMTYPE, MEMCLASS, WRKPERIOD, SSNO, PSTPERIOD}),HRSDTLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As HRSDTLDataTable = CType(MyBase.Clone,HRSDTLDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New HRSDTLDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnEMPRNO = MyBase.Columns("EMPRNO")
            Me.columnEMPRSUB = MyBase.Columns("EMPRSUB")
            Me.columnPLANTYPE = MyBase.Columns("PLANTYPE")
            Me.columnMEMTYPE = MyBase.Columns("MEMTYPE")
            Me.columnMEMCLASS = MyBase.Columns("MEMCLASS")
            Me.columnWRKPERIOD = MyBase.Columns("WRKPERIOD")
            Me.columnSSNO = MyBase.Columns("SSNO")
            Me.columnPSTPERIOD = MyBase.Columns("PSTPERIOD")
            Me.columnFIRST99 = MyBase.Columns("FIRST99")
            Me.columnOVER99 = MyBase.Columns("OVER99")
            Me.columnTVHRS = MyBase.Columns("TVHRS")
            Me.columnFAMLVE_HRS = MyBase.Columns("FAMLVE_HRS")
            Me.columnFNAME = MyBase.Columns("FNAME")
            Me.columnLNAME = MyBase.Columns("LNAME")
            Me.columnTERMDATE = MyBase.Columns("TERMDATE")
            Me.columnACCTNO = MyBase.Columns("ACCTNO")
            Me.columnLOCALNO = MyBase.Columns("LOCALNO")
            Me.columnSTORENO = MyBase.Columns("STORENO")
            Me.columnSOURCE = MyBase.Columns("SOURCE")
            Me.columnPROCESS = MyBase.Columns("PROCESS")
            Me.columnORIG_POSTING = MyBase.Columns("ORIG_POSTING")
            Me.columnUSERID = MyBase.Columns("USERID")
            Me.columnLASTUPDT = MyBase.Columns("LASTUPDT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnEMPRNO = New Global.System.Data.DataColumn("EMPRNO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMPRNO)
            Me.columnEMPRSUB = New Global.System.Data.DataColumn("EMPRSUB", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMPRSUB)
            Me.columnPLANTYPE = New Global.System.Data.DataColumn("PLANTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLANTYPE)
            Me.columnMEMTYPE = New Global.System.Data.DataColumn("MEMTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMTYPE)
            Me.columnMEMCLASS = New Global.System.Data.DataColumn("MEMCLASS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMCLASS)
            Me.columnWRKPERIOD = New Global.System.Data.DataColumn("WRKPERIOD", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWRKPERIOD)
            Me.columnSSNO = New Global.System.Data.DataColumn("SSNO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSSNO)
            Me.columnPSTPERIOD = New Global.System.Data.DataColumn("PSTPERIOD", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPSTPERIOD)
            Me.columnFIRST99 = New Global.System.Data.DataColumn("FIRST99", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRST99)
            Me.columnOVER99 = New Global.System.Data.DataColumn("OVER99", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOVER99)
            Me.columnTVHRS = New Global.System.Data.DataColumn("TVHRS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTVHRS)
            Me.columnFAMLVE_HRS = New Global.System.Data.DataColumn("FAMLVE_HRS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFAMLVE_HRS)
            Me.columnFNAME = New Global.System.Data.DataColumn("FNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNAME)
            Me.columnLNAME = New Global.System.Data.DataColumn("LNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLNAME)
            Me.columnTERMDATE = New Global.System.Data.DataColumn("TERMDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTERMDATE)
            Me.columnACCTNO = New Global.System.Data.DataColumn("ACCTNO", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCTNO)
            Me.columnLOCALNO = New Global.System.Data.DataColumn("LOCALNO", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOCALNO)
            Me.columnSTORENO = New Global.System.Data.DataColumn("STORENO", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTORENO)
            Me.columnSOURCE = New Global.System.Data.DataColumn("SOURCE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSOURCE)
            Me.columnPROCESS = New Global.System.Data.DataColumn("PROCESS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROCESS)
            Me.columnORIG_POSTING = New Global.System.Data.DataColumn("ORIG_POSTING", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORIG_POSTING)
            Me.columnUSERID = New Global.System.Data.DataColumn("USERID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSERID)
            Me.columnLASTUPDT = New Global.System.Data.DataColumn("LASTUPDT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLASTUPDT)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnEMPRNO, Me.columnEMPRSUB, Me.columnPLANTYPE, Me.columnMEMTYPE, Me.columnMEMCLASS, Me.columnWRKPERIOD, Me.columnSSNO, Me.columnPSTPERIOD}, true))
            Me.columnEMPRNO.AllowDBNull = false
            Me.columnEMPRSUB.AllowDBNull = false
            Me.columnPLANTYPE.AllowDBNull = false
            Me.columnPLANTYPE.MaxLength = 1
            Me.columnMEMTYPE.AllowDBNull = false
            Me.columnMEMTYPE.MaxLength = 1
            Me.columnMEMCLASS.AllowDBNull = false
            Me.columnMEMCLASS.MaxLength = 8
            Me.columnWRKPERIOD.AllowDBNull = false
            Me.columnSSNO.AllowDBNull = false
            Me.columnPSTPERIOD.AllowDBNull = false
            Me.columnFIRST99.AllowDBNull = false
            Me.columnOVER99.AllowDBNull = false
            Me.columnTVHRS.AllowDBNull = false
            Me.columnFAMLVE_HRS.AllowDBNull = false
            Me.columnFNAME.AllowDBNull = false
            Me.columnFNAME.MaxLength = 20
            Me.columnLNAME.AllowDBNull = false
            Me.columnLNAME.MaxLength = 30
            Me.columnTERMDATE.AllowDBNull = false
            Me.columnACCTNO.AllowDBNull = false
            Me.columnLOCALNO.AllowDBNull = false
            Me.columnSTORENO.AllowDBNull = false
            Me.columnSOURCE.AllowDBNull = false
            Me.columnSOURCE.MaxLength = 1
            Me.columnPROCESS.AllowDBNull = false
            Me.columnPROCESS.MaxLength = 1
            Me.columnORIG_POSTING.AllowDBNull = false
            Me.columnUSERID.AllowDBNull = false
            Me.columnUSERID.MaxLength = 40
            Me.columnLASTUPDT.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewHRSDTLRow() As HRSDTLRow
            Return CType(Me.NewRow,HRSDTLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New HRSDTLRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(HRSDTLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.HRSDTLRowChangedEvent) Is Nothing) Then
                RaiseEvent HRSDTLRowChanged(Me, New HRSDTLRowChangeEvent(CType(e.Row,HRSDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.HRSDTLRowChangingEvent) Is Nothing) Then
                RaiseEvent HRSDTLRowChanging(Me, New HRSDTLRowChangeEvent(CType(e.Row,HRSDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.HRSDTLRowDeletedEvent) Is Nothing) Then
                RaiseEvent HRSDTLRowDeleted(Me, New HRSDTLRowChangeEvent(CType(e.Row,HRSDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.HRSDTLRowDeletingEvent) Is Nothing) Then
                RaiseEvent HRSDTLRowDeleting(Me, New HRSDTLRowChangeEvent(CType(e.Row,HRSDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveHRSDTLRow(ByVal row As HRSDTLRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As HoursDataSet = New HoursDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "HRSDTLDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class EMPLOYERSDataTable
        Inherits Global.System.Data.TypedTableBase(Of EMPLOYERSRow)
        
        Private columnEMPRNO As Global.System.Data.DataColumn
        
        Private columnEMPRSUB As Global.System.Data.DataColumn
        
        Private columnEMPRNAME As Global.System.Data.DataColumn
        
        Private columnPARTNAME As Global.System.Data.DataColumn
        
        Private columnADDRESS1 As Global.System.Data.DataColumn
        
        Private columnADDRESS2 As Global.System.Data.DataColumn
        
        Private columnCITY As Global.System.Data.DataColumn
        
        Private columnSTATE As Global.System.Data.DataColumn
        
        Private columnZIP5 As Global.System.Data.DataColumn
        
        Private columnZIP4 As Global.System.Data.DataColumn
        
        Private columnCOUNTRY As Global.System.Data.DataColumn
        
        Private columnCONTACTNM1 As Global.System.Data.DataColumn
        
        Private columnCONTACTNM2 As Global.System.Data.DataColumn
        
        Private columnCONTACTPH As Global.System.Data.DataColumn
        
        Private columnCONTACTFX As Global.System.Data.DataColumn
        
        Private columnTAXID As Global.System.Data.DataColumn
        
        Private columnTAXID_SUFX As Global.System.Data.DataColumn
        
        Private columnTAXID_OLD As Global.System.Data.DataColumn
        
        Private columnTAPE_PRELIST As Global.System.Data.DataColumn
        
        Private columnEFFDATE As Global.System.Data.DataColumn
        
        Private columnTERMDATE As Global.System.Data.DataColumn
        
        Private columnTERMCDE As Global.System.Data.DataColumn
        
        Private columnEMAIL As Global.System.Data.DataColumn
        
        Private columnCONTRACT_ID As Global.System.Data.DataColumn
        
        Private columnUFCWACCT As Global.System.Data.DataColumn
        
        Private columnCOMMENTS As Global.System.Data.DataColumn
        
        Private columnUSERID As Global.System.Data.DataColumn
        
        Private columnLASTUPDT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "EMPLOYERS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EMPRNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMPRNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EMPRSUBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMPRSUB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EMPRNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMPRNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PARTNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPARTNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ADDRESS1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDRESS1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ADDRESS2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDRESS2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property STATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ZIP5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnZIP5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ZIP4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnZIP4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property COUNTRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOUNTRY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CONTACTNM1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACTNM1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CONTACTNM2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACTNM2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CONTACTPHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACTPH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CONTACTFXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACTFX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TAXIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTAXID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TAXID_SUFXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTAXID_SUFX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TAXID_OLDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTAXID_OLD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TAPE_PRELISTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTAPE_PRELIST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EFFDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEFFDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TERMDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTERMDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TERMCDEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTERMCDE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CONTRACT_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTRACT_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UFCWACCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUFCWACCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property COMMENTSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMMENTS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property USERIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSERID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LASTUPDTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLASTUPDT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As EMPLOYERSRow
            Get
                Return CType(Me.Rows(index),EMPLOYERSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event EMPLOYERSRowChanging As EMPLOYERSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event EMPLOYERSRowChanged As EMPLOYERSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event EMPLOYERSRowDeleting As EMPLOYERSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event EMPLOYERSRowDeleted As EMPLOYERSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddEMPLOYERSRow(ByVal row As EMPLOYERSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddEMPLOYERSRow( _
                    ByVal EMPRNO As Integer,  _
                    ByVal EMPRSUB As Short,  _
                    ByVal EMPRNAME As String,  _
                    ByVal PARTNAME As String,  _
                    ByVal ADDRESS1 As String,  _
                    ByVal ADDRESS2 As String,  _
                    ByVal CITY As String,  _
                    ByVal STATE As String,  _
                    ByVal ZIP5 As Integer,  _
                    ByVal ZIP4 As Short,  _
                    ByVal COUNTRY As String,  _
                    ByVal CONTACTNM1 As String,  _
                    ByVal CONTACTNM2 As String,  _
                    ByVal CONTACTPH As String,  _
                    ByVal CONTACTFX As String,  _
                    ByVal TAXID As Integer,  _
                    ByVal TAXID_SUFX As Short,  _
                    ByVal TAXID_OLD As Integer,  _
                    ByVal TAPE_PRELIST As String,  _
                    ByVal EFFDATE As Date,  _
                    ByVal TERMDATE As Date,  _
                    ByVal TERMCDE As Short,  _
                    ByVal EMAIL As String,  _
                    ByVal CONTRACT_ID As String,  _
                    ByVal UFCWACCT As String,  _
                    ByVal COMMENTS As String,  _
                    ByVal USERID As String,  _
                    ByVal LASTUPDT As Date) As EMPLOYERSRow
            Dim rowEMPLOYERSRow As EMPLOYERSRow = CType(Me.NewRow,EMPLOYERSRow)
            Dim columnValuesArray() As Object = New Object() {EMPRNO, EMPRSUB, EMPRNAME, PARTNAME, ADDRESS1, ADDRESS2, CITY, STATE, ZIP5, ZIP4, COUNTRY, CONTACTNM1, CONTACTNM2, CONTACTPH, CONTACTFX, TAXID, TAXID_SUFX, TAXID_OLD, TAPE_PRELIST, EFFDATE, TERMDATE, TERMCDE, EMAIL, CONTRACT_ID, UFCWACCT, COMMENTS, USERID, LASTUPDT}
            rowEMPLOYERSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowEMPLOYERSRow)
            Return rowEMPLOYERSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByEMPRNOEMPRSUB(ByVal EMPRNO As Integer, ByVal EMPRSUB As Short) As EMPLOYERSRow
            Return CType(Me.Rows.Find(New Object() {EMPRNO, EMPRSUB}),EMPLOYERSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As EMPLOYERSDataTable = CType(MyBase.Clone,EMPLOYERSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New EMPLOYERSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnEMPRNO = MyBase.Columns("EMPRNO")
            Me.columnEMPRSUB = MyBase.Columns("EMPRSUB")
            Me.columnEMPRNAME = MyBase.Columns("EMPRNAME")
            Me.columnPARTNAME = MyBase.Columns("PARTNAME")
            Me.columnADDRESS1 = MyBase.Columns("ADDRESS1")
            Me.columnADDRESS2 = MyBase.Columns("ADDRESS2")
            Me.columnCITY = MyBase.Columns("CITY")
            Me.columnSTATE = MyBase.Columns("STATE")
            Me.columnZIP5 = MyBase.Columns("ZIP5")
            Me.columnZIP4 = MyBase.Columns("ZIP4")
            Me.columnCOUNTRY = MyBase.Columns("COUNTRY")
            Me.columnCONTACTNM1 = MyBase.Columns("CONTACTNM1")
            Me.columnCONTACTNM2 = MyBase.Columns("CONTACTNM2")
            Me.columnCONTACTPH = MyBase.Columns("CONTACTPH")
            Me.columnCONTACTFX = MyBase.Columns("CONTACTFX")
            Me.columnTAXID = MyBase.Columns("TAXID")
            Me.columnTAXID_SUFX = MyBase.Columns("TAXID_SUFX")
            Me.columnTAXID_OLD = MyBase.Columns("TAXID_OLD")
            Me.columnTAPE_PRELIST = MyBase.Columns("TAPE_PRELIST")
            Me.columnEFFDATE = MyBase.Columns("EFFDATE")
            Me.columnTERMDATE = MyBase.Columns("TERMDATE")
            Me.columnTERMCDE = MyBase.Columns("TERMCDE")
            Me.columnEMAIL = MyBase.Columns("EMAIL")
            Me.columnCONTRACT_ID = MyBase.Columns("CONTRACT_ID")
            Me.columnUFCWACCT = MyBase.Columns("UFCWACCT")
            Me.columnCOMMENTS = MyBase.Columns("COMMENTS")
            Me.columnUSERID = MyBase.Columns("USERID")
            Me.columnLASTUPDT = MyBase.Columns("LASTUPDT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnEMPRNO = New Global.System.Data.DataColumn("EMPRNO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMPRNO)
            Me.columnEMPRSUB = New Global.System.Data.DataColumn("EMPRSUB", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMPRSUB)
            Me.columnEMPRNAME = New Global.System.Data.DataColumn("EMPRNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMPRNAME)
            Me.columnPARTNAME = New Global.System.Data.DataColumn("PARTNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPARTNAME)
            Me.columnADDRESS1 = New Global.System.Data.DataColumn("ADDRESS1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDRESS1)
            Me.columnADDRESS2 = New Global.System.Data.DataColumn("ADDRESS2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDRESS2)
            Me.columnCITY = New Global.System.Data.DataColumn("CITY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCITY)
            Me.columnSTATE = New Global.System.Data.DataColumn("STATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTATE)
            Me.columnZIP5 = New Global.System.Data.DataColumn("ZIP5", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZIP5)
            Me.columnZIP4 = New Global.System.Data.DataColumn("ZIP4", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZIP4)
            Me.columnCOUNTRY = New Global.System.Data.DataColumn("COUNTRY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOUNTRY)
            Me.columnCONTACTNM1 = New Global.System.Data.DataColumn("CONTACTNM1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACTNM1)
            Me.columnCONTACTNM2 = New Global.System.Data.DataColumn("CONTACTNM2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACTNM2)
            Me.columnCONTACTPH = New Global.System.Data.DataColumn("CONTACTPH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACTPH)
            Me.columnCONTACTFX = New Global.System.Data.DataColumn("CONTACTFX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACTFX)
            Me.columnTAXID = New Global.System.Data.DataColumn("TAXID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTAXID)
            Me.columnTAXID_SUFX = New Global.System.Data.DataColumn("TAXID_SUFX", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTAXID_SUFX)
            Me.columnTAXID_OLD = New Global.System.Data.DataColumn("TAXID_OLD", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTAXID_OLD)
            Me.columnTAPE_PRELIST = New Global.System.Data.DataColumn("TAPE_PRELIST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTAPE_PRELIST)
            Me.columnEFFDATE = New Global.System.Data.DataColumn("EFFDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEFFDATE)
            Me.columnTERMDATE = New Global.System.Data.DataColumn("TERMDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTERMDATE)
            Me.columnTERMCDE = New Global.System.Data.DataColumn("TERMCDE", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTERMCDE)
            Me.columnEMAIL = New Global.System.Data.DataColumn("EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL)
            Me.columnCONTRACT_ID = New Global.System.Data.DataColumn("CONTRACT_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTRACT_ID)
            Me.columnUFCWACCT = New Global.System.Data.DataColumn("UFCWACCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUFCWACCT)
            Me.columnCOMMENTS = New Global.System.Data.DataColumn("COMMENTS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMMENTS)
            Me.columnUSERID = New Global.System.Data.DataColumn("USERID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSERID)
            Me.columnLASTUPDT = New Global.System.Data.DataColumn("LASTUPDT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLASTUPDT)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnEMPRNO, Me.columnEMPRSUB}, true))
            Me.columnEMPRNO.AllowDBNull = false
            Me.columnEMPRSUB.AllowDBNull = false
            Me.columnEMPRNAME.MaxLength = 40
            Me.columnPARTNAME.MaxLength = 40
            Me.columnADDRESS1.MaxLength = 30
            Me.columnADDRESS2.MaxLength = 30
            Me.columnCITY.MaxLength = 30
            Me.columnSTATE.MaxLength = 2
            Me.columnCOUNTRY.MaxLength = 3
            Me.columnCONTACTNM1.MaxLength = 20
            Me.columnCONTACTNM2.MaxLength = 20
            Me.columnCONTACTPH.MaxLength = 10
            Me.columnCONTACTFX.MaxLength = 10
            Me.columnTAPE_PRELIST.MaxLength = 1
            Me.columnEMAIL.MaxLength = 40
            Me.columnCONTRACT_ID.MaxLength = 15
            Me.columnUFCWACCT.MaxLength = 20
            Me.columnCOMMENTS.MaxLength = 254
            Me.columnUSERID.MaxLength = 40
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewEMPLOYERSRow() As EMPLOYERSRow
            Return CType(Me.NewRow,EMPLOYERSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New EMPLOYERSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(EMPLOYERSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.EMPLOYERSRowChangedEvent) Is Nothing) Then
                RaiseEvent EMPLOYERSRowChanged(Me, New EMPLOYERSRowChangeEvent(CType(e.Row,EMPLOYERSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.EMPLOYERSRowChangingEvent) Is Nothing) Then
                RaiseEvent EMPLOYERSRowChanging(Me, New EMPLOYERSRowChangeEvent(CType(e.Row,EMPLOYERSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.EMPLOYERSRowDeletedEvent) Is Nothing) Then
                RaiseEvent EMPLOYERSRowDeleted(Me, New EMPLOYERSRowChangeEvent(CType(e.Row,EMPLOYERSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.EMPLOYERSRowDeletingEvent) Is Nothing) Then
                RaiseEvent EMPLOYERSRowDeleting(Me, New EMPLOYERSRowChangeEvent(CType(e.Row,EMPLOYERSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveEMPLOYERSRow(ByVal row As EMPLOYERSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As HoursDataSet = New HoursDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "EMPLOYERSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class REG_MASTERRow
        Inherits Global.System.Data.DataRow
        
        Private tableREG_MASTER As REG_MASTERDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREG_MASTER = CType(Me.Table,REG_MASTERDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FAMILY_ID() As Decimal
            Get
                Return CType(Me(Me.tableREG_MASTER.FAMILY_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableREG_MASTER.FAMILY_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RELATION_ID() As Decimal
            Get
                Return CType(Me(Me.tableREG_MASTER.RELATION_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableREG_MASTER.RELATION_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FROM_DATE() As Date
            Get
                Return CType(Me(Me.tableREG_MASTER.FROM_DATEColumn),Date)
            End Get
            Set
                Me(Me.tableREG_MASTER.FROM_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property THRU_DATE() As Date
            Get
                Return CType(Me(Me.tableREG_MASTER.THRU_DATEColumn),Date)
            End Get
            Set
                Me(Me.tableREG_MASTER.THRU_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SSNO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREG_MASTER.SSNOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SSNO' in table 'REG_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREG_MASTER.SSNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PART_SSNO() As Decimal
            Get
                Return CType(Me(Me.tableREG_MASTER.PART_SSNOColumn),Decimal)
            End Get
            Set
                Me(Me.tableREG_MASTER.PART_SSNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RELATION() As String
            Get
                Return CType(Me(Me.tableREG_MASTER.RELATIONColumn),String)
            End Get
            Set
                Me(Me.tableREG_MASTER.RELATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SURVIVING_SPOUSE_SW() As Boolean
            Get
                Return CType(Me(Me.tableREG_MASTER.SURVIVING_SPOUSE_SWColumn),Boolean)
            End Get
            Set
                Me(Me.tableREG_MASTER.SURVIVING_SPOUSE_SWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property STEP_SW() As Boolean
            Get
                Return CType(Me(Me.tableREG_MASTER.STEP_SWColumn),Boolean)
            End Get
            Set
                Me(Me.tableREG_MASTER.STEP_SWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FOSTER_SW() As Boolean
            Get
                Return CType(Me(Me.tableREG_MASTER.FOSTER_SWColumn),Boolean)
            End Get
            Set
                Me(Me.tableREG_MASTER.FOSTER_SWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DISABLE_SW() As Boolean
            Get
                Return CType(Me(Me.tableREG_MASTER.DISABLE_SWColumn),Boolean)
            End Get
            Set
                Me(Me.tableREG_MASTER.DISABLE_SWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property STUDENT_SW() As Boolean
            Get
                Return CType(Me(Me.tableREG_MASTER.STUDENT_SWColumn),Boolean)
            End Get
            Set
                Me(Me.tableREG_MASTER.STUDENT_SWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ELIG_PERIOD() As Date
            Get
                Return CType(Me(Me.tableREG_MASTER.ELIG_PERIODColumn),Date)
            End Get
            Set
                Me(Me.tableREG_MASTER.ELIG_PERIODColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property STATUS() As String
            Get
                Return CType(Me(Me.tableREG_MASTER.STATUSColumn),String)
            End Get
            Set
                Me(Me.tableREG_MASTER.STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PLANTYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableREG_MASTER.PLANTYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLANTYPE' in table 'REG_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREG_MASTER.PLANTYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MEMTYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableREG_MASTER.MEMTYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMTYPE' in table 'REG_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREG_MASTER.MEMTYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MEMDESC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREG_MASTER.MEMDESCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMDESC' in table 'REG_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREG_MASTER.MEMDESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MEMCLASS() As String
            Get
                Try 
                    Return CType(Me(Me.tableREG_MASTER.MEMCLASSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMCLASS' in table 'REG_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREG_MASTER.MEMCLASSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MEDICAL_PLAN() As Decimal
            Get
                Return CType(Me(Me.tableREG_MASTER.MEDICAL_PLANColumn),Decimal)
            End Get
            Set
                Me(Me.tableREG_MASTER.MEDICAL_PLANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tableREG_MASTER.DESCRIPTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCRIPTION' in table 'REG_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREG_MASTER.DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MED_ELIG_SW() As Boolean
            Get
                Return CType(Me(Me.tableREG_MASTER.MED_ELIG_SWColumn),Boolean)
            End Get
            Set
                Me(Me.tableREG_MASTER.MED_ELIG_SWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DEN_ELIG_SW() As Boolean
            Get
                Return CType(Me(Me.tableREG_MASTER.DEN_ELIG_SWColumn),Boolean)
            End Get
            Set
                Me(Me.tableREG_MASTER.DEN_ELIG_SWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FAMILY_SW() As Boolean
            Get
                Return CType(Me(Me.tableREG_MASTER.FAMILY_SWColumn),Boolean)
            End Get
            Set
                Me(Me.tableREG_MASTER.FAMILY_SWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PREMIUM_SW() As Boolean
            Get
                Return CType(Me(Me.tableREG_MASTER.PREMIUM_SWColumn),Boolean)
            End Get
            Set
                Me(Me.tableREG_MASTER.PREMIUM_SWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PLAN_TYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableREG_MASTER.PLAN_TYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLAN_TYPE' in table 'REG_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREG_MASTER.PLAN_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PLAN_DESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tableREG_MASTER.PLAN_DESCRIPTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLAN_DESCRIPTION' in table 'REG_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREG_MASTER.PLAN_DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PREM_TYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableREG_MASTER.PREM_TYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PREM_TYPE' in table 'REG_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREG_MASTER.PREM_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BAL_MED() As String
            Get
                Try 
                    Return CType(Me(Me.tableREG_MASTER.BAL_MEDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BAL_MED' in table 'REG_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREG_MASTER.BAL_MEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Icon() As String
            Get
                Try 
                    Return CType(Me(Me.tableREG_MASTER.IconColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Icon' in table 'REG_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREG_MASTER.IconColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableREG_MASTER.TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Type' in table 'REG_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREG_MASTER.TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSSNONull() As Boolean
            Return Me.IsNull(Me.tableREG_MASTER.SSNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSSNONull()
            Me(Me.tableREG_MASTER.SSNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPLANTYPENull() As Boolean
            Return Me.IsNull(Me.tableREG_MASTER.PLANTYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPLANTYPENull()
            Me(Me.tableREG_MASTER.PLANTYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsMEMTYPENull() As Boolean
            Return Me.IsNull(Me.tableREG_MASTER.MEMTYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetMEMTYPENull()
            Me(Me.tableREG_MASTER.MEMTYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsMEMDESCNull() As Boolean
            Return Me.IsNull(Me.tableREG_MASTER.MEMDESCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetMEMDESCNull()
            Me(Me.tableREG_MASTER.MEMDESCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsMEMCLASSNull() As Boolean
            Return Me.IsNull(Me.tableREG_MASTER.MEMCLASSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetMEMCLASSNull()
            Me(Me.tableREG_MASTER.MEMCLASSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableREG_MASTER.DESCRIPTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDESCRIPTIONNull()
            Me(Me.tableREG_MASTER.DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPLAN_TYPENull() As Boolean
            Return Me.IsNull(Me.tableREG_MASTER.PLAN_TYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPLAN_TYPENull()
            Me(Me.tableREG_MASTER.PLAN_TYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPLAN_DESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableREG_MASTER.PLAN_DESCRIPTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPLAN_DESCRIPTIONNull()
            Me(Me.tableREG_MASTER.PLAN_DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPREM_TYPENull() As Boolean
            Return Me.IsNull(Me.tableREG_MASTER.PREM_TYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPREM_TYPENull()
            Me(Me.tableREG_MASTER.PREM_TYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBAL_MEDNull() As Boolean
            Return Me.IsNull(Me.tableREG_MASTER.BAL_MEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBAL_MEDNull()
            Me(Me.tableREG_MASTER.BAL_MEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsIconNull() As Boolean
            Return Me.IsNull(Me.tableREG_MASTER.IconColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetIconNull()
            Me(Me.tableREG_MASTER.IconColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTypeNull() As Boolean
            Return Me.IsNull(Me.tableREG_MASTER.TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTypeNull()
            Me(Me.tableREG_MASTER.TypeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class HRSDTLRow
        Inherits Global.System.Data.DataRow
        
        Private tableHRSDTL As HRSDTLDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableHRSDTL = CType(Me.Table,HRSDTLDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EMPRNO() As Integer
            Get
                Return CType(Me(Me.tableHRSDTL.EMPRNOColumn),Integer)
            End Get
            Set
                Me(Me.tableHRSDTL.EMPRNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EMPRSUB() As Short
            Get
                Return CType(Me(Me.tableHRSDTL.EMPRSUBColumn),Short)
            End Get
            Set
                Me(Me.tableHRSDTL.EMPRSUBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PLANTYPE() As String
            Get
                Return CType(Me(Me.tableHRSDTL.PLANTYPEColumn),String)
            End Get
            Set
                Me(Me.tableHRSDTL.PLANTYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MEMTYPE() As String
            Get
                Return CType(Me(Me.tableHRSDTL.MEMTYPEColumn),String)
            End Get
            Set
                Me(Me.tableHRSDTL.MEMTYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MEMCLASS() As String
            Get
                Return CType(Me(Me.tableHRSDTL.MEMCLASSColumn),String)
            End Get
            Set
                Me(Me.tableHRSDTL.MEMCLASSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WRKPERIOD() As Date
            Get
                Return CType(Me(Me.tableHRSDTL.WRKPERIODColumn),Date)
            End Get
            Set
                Me(Me.tableHRSDTL.WRKPERIODColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SSNO() As Integer
            Get
                Return CType(Me(Me.tableHRSDTL.SSNOColumn),Integer)
            End Get
            Set
                Me(Me.tableHRSDTL.SSNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PSTPERIOD() As Date
            Get
                Return CType(Me(Me.tableHRSDTL.PSTPERIODColumn),Date)
            End Get
            Set
                Me(Me.tableHRSDTL.PSTPERIODColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FIRST99() As Decimal
            Get
                Return CType(Me(Me.tableHRSDTL.FIRST99Column),Decimal)
            End Get
            Set
                Me(Me.tableHRSDTL.FIRST99Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OVER99() As Decimal
            Get
                Return CType(Me(Me.tableHRSDTL.OVER99Column),Decimal)
            End Get
            Set
                Me(Me.tableHRSDTL.OVER99Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TVHRS() As Decimal
            Get
                Return CType(Me(Me.tableHRSDTL.TVHRSColumn),Decimal)
            End Get
            Set
                Me(Me.tableHRSDTL.TVHRSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FAMLVE_HRS() As Decimal
            Get
                Return CType(Me(Me.tableHRSDTL.FAMLVE_HRSColumn),Decimal)
            End Get
            Set
                Me(Me.tableHRSDTL.FAMLVE_HRSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FNAME() As String
            Get
                Return CType(Me(Me.tableHRSDTL.FNAMEColumn),String)
            End Get
            Set
                Me(Me.tableHRSDTL.FNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LNAME() As String
            Get
                Return CType(Me(Me.tableHRSDTL.LNAMEColumn),String)
            End Get
            Set
                Me(Me.tableHRSDTL.LNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TERMDATE() As Date
            Get
                Return CType(Me(Me.tableHRSDTL.TERMDATEColumn),Date)
            End Get
            Set
                Me(Me.tableHRSDTL.TERMDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ACCTNO() As Short
            Get
                Return CType(Me(Me.tableHRSDTL.ACCTNOColumn),Short)
            End Get
            Set
                Me(Me.tableHRSDTL.ACCTNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LOCALNO() As Short
            Get
                Return CType(Me(Me.tableHRSDTL.LOCALNOColumn),Short)
            End Get
            Set
                Me(Me.tableHRSDTL.LOCALNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property STORENO() As Short
            Get
                Return CType(Me(Me.tableHRSDTL.STORENOColumn),Short)
            End Get
            Set
                Me(Me.tableHRSDTL.STORENOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SOURCE() As String
            Get
                Return CType(Me(Me.tableHRSDTL.SOURCEColumn),String)
            End Get
            Set
                Me(Me.tableHRSDTL.SOURCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PROCESS() As String
            Get
                Return CType(Me(Me.tableHRSDTL.PROCESSColumn),String)
            End Get
            Set
                Me(Me.tableHRSDTL.PROCESSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ORIG_POSTING() As Date
            Get
                Return CType(Me(Me.tableHRSDTL.ORIG_POSTINGColumn),Date)
            End Get
            Set
                Me(Me.tableHRSDTL.ORIG_POSTINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property USERID() As String
            Get
                Return CType(Me(Me.tableHRSDTL.USERIDColumn),String)
            End Get
            Set
                Me(Me.tableHRSDTL.USERIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LASTUPDT() As Date
            Get
                Return CType(Me(Me.tableHRSDTL.LASTUPDTColumn),Date)
            End Get
            Set
                Me(Me.tableHRSDTL.LASTUPDTColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class EMPLOYERSRow
        Inherits Global.System.Data.DataRow
        
        Private tableEMPLOYERS As EMPLOYERSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableEMPLOYERS = CType(Me.Table,EMPLOYERSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EMPRNO() As Integer
            Get
                Return CType(Me(Me.tableEMPLOYERS.EMPRNOColumn),Integer)
            End Get
            Set
                Me(Me.tableEMPLOYERS.EMPRNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EMPRSUB() As Short
            Get
                Return CType(Me(Me.tableEMPLOYERS.EMPRSUBColumn),Short)
            End Get
            Set
                Me(Me.tableEMPLOYERS.EMPRSUBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EMPRNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYERS.EMPRNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMPRNAME' in table 'EMPLOYERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYERS.EMPRNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PARTNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYERS.PARTNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PARTNAME' in table 'EMPLOYERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYERS.PARTNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ADDRESS1() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYERS.ADDRESS1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDRESS1' in table 'EMPLOYERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYERS.ADDRESS1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ADDRESS2() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYERS.ADDRESS2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDRESS2' in table 'EMPLOYERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYERS.ADDRESS2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CITY() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYERS.CITYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CITY' in table 'EMPLOYERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYERS.CITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property STATE() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYERS.STATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STATE' in table 'EMPLOYERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYERS.STATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ZIP5() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYERS.ZIP5Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZIP5' in table 'EMPLOYERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYERS.ZIP5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ZIP4() As Short
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYERS.ZIP4Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZIP4' in table 'EMPLOYERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYERS.ZIP4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property COUNTRY() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYERS.COUNTRYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COUNTRY' in table 'EMPLOYERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYERS.COUNTRYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CONTACTNM1() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYERS.CONTACTNM1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTACTNM1' in table 'EMPLOYERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYERS.CONTACTNM1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CONTACTNM2() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYERS.CONTACTNM2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTACTNM2' in table 'EMPLOYERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYERS.CONTACTNM2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CONTACTPH() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYERS.CONTACTPHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTACTPH' in table 'EMPLOYERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYERS.CONTACTPHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CONTACTFX() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYERS.CONTACTFXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTACTFX' in table 'EMPLOYERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYERS.CONTACTFXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TAXID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYERS.TAXIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TAXID' in table 'EMPLOYERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYERS.TAXIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TAXID_SUFX() As Short
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYERS.TAXID_SUFXColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TAXID_SUFX' in table 'EMPLOYERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYERS.TAXID_SUFXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TAXID_OLD() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYERS.TAXID_OLDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TAXID_OLD' in table 'EMPLOYERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYERS.TAXID_OLDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TAPE_PRELIST() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYERS.TAPE_PRELISTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TAPE_PRELIST' in table 'EMPLOYERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYERS.TAPE_PRELISTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EFFDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYERS.EFFDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EFFDATE' in table 'EMPLOYERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYERS.EFFDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TERMDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYERS.TERMDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TERMDATE' in table 'EMPLOYERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYERS.TERMDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TERMCDE() As Short
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYERS.TERMCDEColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TERMCDE' in table 'EMPLOYERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYERS.TERMCDEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EMAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYERS.EMAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMAIL' in table 'EMPLOYERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYERS.EMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CONTRACT_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYERS.CONTRACT_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTRACT_ID' in table 'EMPLOYERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYERS.CONTRACT_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UFCWACCT() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYERS.UFCWACCTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UFCWACCT' in table 'EMPLOYERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYERS.UFCWACCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property COMMENTS() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYERS.COMMENTSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMMENTS' in table 'EMPLOYERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYERS.COMMENTSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property USERID() As String
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYERS.USERIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'USERID' in table 'EMPLOYERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYERS.USERIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LASTUPDT() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEMPLOYERS.LASTUPDTColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LASTUPDT' in table 'EMPLOYERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEMPLOYERS.LASTUPDTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEMPRNAMENull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYERS.EMPRNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEMPRNAMENull()
            Me(Me.tableEMPLOYERS.EMPRNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPARTNAMENull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYERS.PARTNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPARTNAMENull()
            Me(Me.tableEMPLOYERS.PARTNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsADDRESS1Null() As Boolean
            Return Me.IsNull(Me.tableEMPLOYERS.ADDRESS1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetADDRESS1Null()
            Me(Me.tableEMPLOYERS.ADDRESS1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsADDRESS2Null() As Boolean
            Return Me.IsNull(Me.tableEMPLOYERS.ADDRESS2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetADDRESS2Null()
            Me(Me.tableEMPLOYERS.ADDRESS2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCITYNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYERS.CITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCITYNull()
            Me(Me.tableEMPLOYERS.CITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSTATENull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYERS.STATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSTATENull()
            Me(Me.tableEMPLOYERS.STATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsZIP5Null() As Boolean
            Return Me.IsNull(Me.tableEMPLOYERS.ZIP5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetZIP5Null()
            Me(Me.tableEMPLOYERS.ZIP5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsZIP4Null() As Boolean
            Return Me.IsNull(Me.tableEMPLOYERS.ZIP4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetZIP4Null()
            Me(Me.tableEMPLOYERS.ZIP4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCOUNTRYNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYERS.COUNTRYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCOUNTRYNull()
            Me(Me.tableEMPLOYERS.COUNTRYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCONTACTNM1Null() As Boolean
            Return Me.IsNull(Me.tableEMPLOYERS.CONTACTNM1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCONTACTNM1Null()
            Me(Me.tableEMPLOYERS.CONTACTNM1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCONTACTNM2Null() As Boolean
            Return Me.IsNull(Me.tableEMPLOYERS.CONTACTNM2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCONTACTNM2Null()
            Me(Me.tableEMPLOYERS.CONTACTNM2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCONTACTPHNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYERS.CONTACTPHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCONTACTPHNull()
            Me(Me.tableEMPLOYERS.CONTACTPHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCONTACTFXNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYERS.CONTACTFXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCONTACTFXNull()
            Me(Me.tableEMPLOYERS.CONTACTFXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTAXIDNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYERS.TAXIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTAXIDNull()
            Me(Me.tableEMPLOYERS.TAXIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTAXID_SUFXNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYERS.TAXID_SUFXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTAXID_SUFXNull()
            Me(Me.tableEMPLOYERS.TAXID_SUFXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTAXID_OLDNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYERS.TAXID_OLDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTAXID_OLDNull()
            Me(Me.tableEMPLOYERS.TAXID_OLDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTAPE_PRELISTNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYERS.TAPE_PRELISTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTAPE_PRELISTNull()
            Me(Me.tableEMPLOYERS.TAPE_PRELISTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEFFDATENull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYERS.EFFDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEFFDATENull()
            Me(Me.tableEMPLOYERS.EFFDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTERMDATENull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYERS.TERMDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTERMDATENull()
            Me(Me.tableEMPLOYERS.TERMDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTERMCDENull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYERS.TERMCDEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTERMCDENull()
            Me(Me.tableEMPLOYERS.TERMCDEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEMAILNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYERS.EMAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEMAILNull()
            Me(Me.tableEMPLOYERS.EMAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCONTRACT_IDNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYERS.CONTRACT_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCONTRACT_IDNull()
            Me(Me.tableEMPLOYERS.CONTRACT_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUFCWACCTNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYERS.UFCWACCTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUFCWACCTNull()
            Me(Me.tableEMPLOYERS.UFCWACCTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCOMMENTSNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYERS.COMMENTSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCOMMENTSNull()
            Me(Me.tableEMPLOYERS.COMMENTSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUSERIDNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYERS.USERIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUSERIDNull()
            Me(Me.tableEMPLOYERS.USERIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLASTUPDTNull() As Boolean
            Return Me.IsNull(Me.tableEMPLOYERS.LASTUPDTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLASTUPDTNull()
            Me(Me.tableEMPLOYERS.LASTUPDTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class REG_MASTERRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REG_MASTERRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As REG_MASTERRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As REG_MASTERRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class HRSDTLRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As HRSDTLRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As HRSDTLRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As HRSDTLRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class EMPLOYERSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As EMPLOYERSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As EMPLOYERSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As EMPLOYERSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
