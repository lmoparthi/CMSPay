-- <ScriptOptions statementSeparator="@"/>
@
-- <ScriptOptions errors="off"/>
@
-- Drop the procedure if one already exists
DROP  PROCEDURE FDBMD.RETRIEVE_PROVIDERINFO_BY_PROVIDERID
@
COMMIT
@
-- <ScriptOptions errors="on"/>
@
-- Create procedure
CREATE PROCEDURE FDBMD.RETRIEVE_PROVIDERINFO_BY_PROVIDERID(
		IN	vPROVIDER_ID		INTEGER)
	RESULT SETS 1
	--LANGUAGE SQL
	COLLID FODBCOLL
	--WLM ENVIRONMENT WLMDENV4 STAY RESIDENT YES
	RUN OPTIONS ''
--------------------------------------------------------------------------
-- DB2 SQL procedure
--------------------------------------------------------------------------

P1: BEGIN

-- Declare variables




-- Declare cursors
DECLARE PROVIDERSUMMARY CURSOR WITH RETURN FOR 
	SELECT  PROVIDER.PROVIDER_ID,
			PROVIDER.TAXID,
			PROVIDER.TAXID_TYPE,
			PROVIDER.ALERT,
			PROVIDER.NAME1,
			PROVIDER.NAME2,
			PROVIDER.SUSPEND_SW,
			PROVIDER.PPOC_ELIGIBLE_SW,
			PROVIDER.PARENT_ID,
			PROVIDER.NPI,
			PROVIDER.COMMENT_ID,
			PROVIDER.CREATE_USERID,
			PROVIDER.CREATE_DATE,
			PROVIDER.BATCH_USERID,
			PROVIDER.BATCH_DATE,
			PROVIDER.ONLINE_USERID "ProviderTimestamp",
			PROVIDER.ONLINE_DATE "ProviderUserID"
	FROM	FDBMD.PROVIDER PROVIDER 
	WHERE	PROVIDER.PROVIDER_ID = vPROVIDER_ID
	AND		PROVIDER.ELECTRONIC_USE_ONLY_SW = 0
	OPTIMIZE FOR 5 ROWS;
	
DECLARE PROVIDERSUMMARY1 CURSOR WITH RETURN FOR 
	SELECT  PROVIDER_ADDRESS.PROVIDER_ID,
			PROVIDER_ADDRESS.ADDRESS_TYPE,
			PROVIDER_ADDRESS.SUSPEND_SW,
			PROVIDER_ADDRESS.ADDRESS_LINE1,
			PROVIDER_ADDRESS.ADDRESS_LINE2,
			PROVIDER_ADDRESS.CITY,
			PROVIDER_ADDRESS.COUNTRY,
			PROVIDER_ADDRESS.STATE,
			PROVIDER_ADDRESS.ZIP,
			PROVIDER_ADDRESS.ZIP_4,
			PROVIDER_ADDRESS.EMAIL1,
			PROVIDER_ADDRESS.PHONE1,
			PROVIDER_ADDRESS.EXTENSION1,
			PROVIDER_ADDRESS.CONTACT1,
			PROVIDER_ADDRESS.EMAIL2,
			PROVIDER_ADDRESS.PHONE2,
			PROVIDER_ADDRESS.EXTENSION2,
			PROVIDER_ADDRESS.CONTACT2,
			PROVIDER_ADDRESS.CREATE_USERID,
			PROVIDER_ADDRESS.ONLINE_DATE "AddressTimestamp",
			PROVIDER_ADDRESS.ONLINE_USERID "AddressUserID",
			PROVIDER_ADDRESS.BATCH_DATE,
			PROVIDER_ADDRESS.BATCH_USERID,
			PROVIDER_ADDRESS.CREATE_DATE
	FROM	FDBMD.PROVIDER PROVIDER INNER JOIN
			FDBMD.PROVIDER_ADDRESS PROVIDER_ADDRESS ON PROVIDER.PROVIDER_ID = PROVIDER_ADDRESS.PROVIDER_ID
	WHERE	PROVIDER_ADDRESS.PROVIDER_ID = vPROVIDER_ID
	AND		PROVIDER.ELECTRONIC_USE_ONLY_SW = 0
	OPTIMIZE FOR 5 ROWS;
	
DECLARE PROVIDERSUMMARY2 CURSOR WITH RETURN FOR 
	SELECT  PROVIDER_LICENSE.LICENSE_ID,
			PROVIDER_LICENSE.PROVIDER_ID,
			PROVIDER_LICENSE.LICENSE,
			PROVIDER_LICENSE.LICENSE_DESCRIPTION,
			PROVIDER_LICENSE.CREATE_USERID,
			PROVIDER_LICENSE.CREATE_DATE,
			PROVIDER_LICENSE.BATCH_USERID,
			PROVIDER_LICENSE.BATCH_DATE,
			PROVIDER_LICENSE.ONLINE_USERID "LicenseUserID",
			PROVIDER_LICENSE.ONLINE_DATE "LicenseTimestamp"
	FROM	FDBMD.PROVIDER PROVIDER INNER JOIN
			FDBMD.PROVIDER_LICENSE PROVIDER_LICENSE ON PROVIDER.PROVIDER_ID = PROVIDER_LICENSE.PROVIDER_ID
	WHERE	PROVIDER_LICENSE.PROVIDER_ID = vPROVIDER_ID
	AND		PROVIDER.ELECTRONIC_USE_ONLY_SW = 0
	OPTIMIZE FOR 5 ROWS;

--

-- Cursor left open for client application.
OPEN PROVIDERSUMMARY;
OPEN PROVIDERSUMMARY1;
OPEN PROVIDERSUMMARY2;

--

END P1
@
-- <ScriptOptions WLMRefresh="WLMDENV4" />
@
-- Grant access privilages to procedure
GRANT EXECUTE ON PROCEDURE FDBMD.RETRIEVE_PROVIDERINFO_BY_PROVIDERID TO PUBLIC
@
