-- <ScriptOptions statementSeparator="@"/>
@
-- <ScriptOptions errors="off"/>
@
-- Drop the procedure if one already exists
DROP  PROCEDURE FDBMD.UPDATE_PROVIDER
@
COMMIT
@
-- <ScriptOptions errors="on"/>
@
-- Create procedure
CREATE PROCEDURE FDBMD.UPDATE_PROVIDER(
		IN	vPROVIDER_ID			INTEGER,
		IN	vTAXID					INTEGER,
		IN	vTAXID_TYPE				CHARACTER ( 1 ),
		IN	vALERT					CHARACTER ( 1 ),
		IN	vNAME1					VARCHAR ( 50 ),
		IN	vNAME2					VARCHAR ( 50 ),
		IN	vSUSPEND_SW				DECIMAL ( 1,0 ),
		IN	vPPOC_ELIGIBLE_SW		DECIMAL ( 1,0 ),
		IN	vNPI					DECIMAL ( 10,0 ),
		IN	vCOMMENTID				INTEGER,
		IN	vUSERID					VARCHAR ( 40 ),
		IN	vORIGINAL_ONLINE_DATE	TIMESTAMP)
	--LANGUAGE SQL
	COLLID FODBMDFY
	--WLM ENVIRONMENT WLMDENV4 STAY RESIDENT YES
	RUN OPTIONS ''
--------------------------------------------------------------------------
-- DB2 SQL procedure
--------------------------------------------------------------------------

P1: BEGIN

-- Declare variables

DECLARE vDEFAULT_DATE TIMESTAMP;
DECLARE EXIT HANDLER FOR NOT FOUND
	 SIGNAL SQLSTATE '38200'  SET MESSAGE_TEXT = 'Row Not Found, Update Failed.';

SET vDEFAULT_DATE = CURRENT TIMESTAMP ;

--

UPDATE	FDBMD.PROVIDER PROVIDER
SET		PROVIDER.TAXID = vTAXID, PROVIDER.TAXID_TYPE = vTAXID_TYPE, PROVIDER.ALERT = vALERT, PROVIDER.NAME1 = vNAME1, PROVIDER.NAME2 = vNAME2, PROVIDER.SUSPEND_SW = vSUSPEND_SW, PROVIDER.PPOC_ELIGIBLE_SW = vPPOC_ELIGIBLE_SW, PROVIDER.NPI = vNPI, PROVIDER.COMMENT_ID = vCOMMENTID, PROVIDER.ONLINE_USERID = vUSERID, PROVIDER.ONLINE_DATE = vDEFAULT_DATE
WHERE	PROVIDER.PROVIDER_ID = vPROVIDER_ID
AND		PROVIDER.ONLINE_DATE >= vORIGINAL_ONLINE_DATE
AND		PROVIDER.ONLINE_DATE < vORIGINAL_ONLINE_DATE + 1 SECONDS;


--

END P1
@
-- <ScriptOptions WLMRefresh="WLMDENV4" />
@
-- Grant access privilages to procedure
GRANT EXECUTE ON PROCEDURE FDBMD.UPDATE_PROVIDER TO PUBLIC
@
