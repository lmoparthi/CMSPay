-- <ScriptOptions statementSeparator="@"/>
@
-- <ScriptOptions errors="off"/>
@
-- Drop the procedure if one already exists
DROP  PROCEDURE FDBMD.RETRIEVE_PROVIDERMAILADDRESS_BY_PROVIDERID
@
COMMIT
@
-- <ScriptOptions errors="on"/>
@
-- Create procedure
CREATE PROCEDURE FDBMD.RETRIEVE_PROVIDERMAILADDRESS_BY_PROVIDERID(
		IN	vPROVIDER_ID		INTEGER)
	RESULT SETS 1
	--LANGUAGE SQL
	COLLID FODBMDFY
	--WLM ENVIRONMENT WLMDENV4 
	STAY RESIDENT YES
	RUN OPTIONS ''
--------------------------------------------------------------------------
-- DB2 SQL procedure
--------------------------------------------------------------------------

P1: BEGIN

-- Declare variables


-- Declare cursors
DECLARE ADOCURSOR CURSOR WITH RETURN FOR 
	SELECT  PROVIDER.PROVIDER_ID,
			PROVIDER.TAXID,
			CASE PROVIDER.TAXID_TYPE
				WHEN 'T'
				THEN 'TAXID'
				ELSE 'SSN'
			END AS TAXID_TYPE,
			PROVIDER.NAME1,
			PROVIDER.NAME2,
			PROVIDER.SUSPEND_SW "ProviderSuspended",
			PROVIDER.PPOC_ELIGIBLE_SW,
			PROVIDER.PARENT_ID,
			PROVIDER.NPI,
			PROVIDER.COMMENT_ID,
			PROVIDER.ALERT,
			PROVIDER_ADDRESS.ADDRESS_LINE1,
			PROVIDER_ADDRESS.ADDRESS_LINE2,
			PROVIDER_ADDRESS.CITY,
			PROVIDER_ADDRESS.COUNTRY,
			PROVIDER_ADDRESS.STATE,
			PROVIDER_ADDRESS.ZIP,
			PROVIDER_ADDRESS.ZIP_4,
			PROVIDER_ADDRESS.SUSPEND_SW "AddressSuspended"

	FROM	FDBMD.PROVIDER_ADDRESS PROVIDER_ADDRESS INNER JOIN
			FDBMD.PROVIDER PROVIDER ON PROVIDER.PROVIDER_ID = PROVIDER_ADDRESS.PROVIDER_ID 
	WHERE	PROVIDER.PROVIDER_ID = vPROVIDER_ID 
	AND		PROVIDER_ADDRESS.ADDRESS_TYPE = 1
	AND		PROVIDER.ELECTRONIC_USE_ONLY_SW = 0
	FOR READ ONLY
	FETCH FIRST 1 ROWS ONLY
	OPTIMIZE FOR 1 ROW;


-- Cursor left open for client application.
OPEN ADOCURSOR;

--

END P1
@
-- <ScriptOptions WLMRefresh="WLMDENV4" />
@
-- Grant access privilages to procedure
GRANT EXECUTE ON PROCEDURE FDBMD.RETRIEVE_PROVIDERMAILADDRESS_BY_PROVIDERID TO PUBLIC
@
