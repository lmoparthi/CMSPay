-- <ScriptOptions statementSeparator="@"/>
-- <ScriptOptions errors="off" platform390="off"/>
@
-- Drop the stored procedure if one already exists
DROP PROCEDURE FDBMD.CLAIMS_WITH_BAD_TAXID
@
COMMIT
@
-- <ScriptOptions errors="on"/>
@
-- Create stored procedure
CREATE PROCEDURE FDBMD.CLAIMS_WITH_BAD_TAXID ()
		RESULT SETS 1
--	LANGUAGE SQL
	COLLID FODBCOLL
--	WLM ENVIRONMENT WLMDENV4
--	STAY RESIDENT YES
	RUN OPTIONS ''
------------------------------------------------------------------------
-- DB2 SQL Stored Procedure 
------------------------------------------------------------------------
P1: BEGIN

DECLARE tempCLAIM_ID	INTEGER ;
DECLARE NOMORE		INTEGER DEFAULT 0;
DECLARE NOT_FOUND CONDITION FOR SQLSTATE '02000';
-- Declare cursors

DECLARE ADOCURSOR INSENSITIVE SCROLL CURSOR WITH RETURN FOR
	SELECT  MEDHDR.CLAIM_ID, MEDHDR.FAMILY_ID, MEDHDR.RELATION_ID, MEDHDR.STATUS, MEDHDR.PROV_TIN
	FROM    FDBMD.MEDHDR  MEDHDR INNER JOIN   
			FDBMD.MEDDTL  MEDDTL ON	MEDHDR.CLAIM_ID = MEDDTL.CLAIM_ID INNER JOIN
			FDBMD.PROVIDER PROVIDER ON PROVIDER.TAXID = MEDHDR.PROV_TIN
    WHERE	MEDHDR.STATUS IN   ( 'WAITPROCESSING', 'REOBP', 'REOBM', 'REOBB' )
    AND		PROVIDER.ELECTRONIC_USE_ONLY_SW = 1 
    AND		MEDDTL.PROC_CODE   NOT IN   ( '90656', '90657', '90658' ) 
	GROUP BY  MEDHDR.CLAIM_ID, MEDHDR.FAMILY_ID, MEDHDR.RELATION_ID, MEDHDR.PROV_TIN, MEDHDR.STATUS
	FOR READ ONLY
	WITH UR;

DECLARE ADOCURSOR1 CURSOR FOR
	SELECT  MEDHDR.CLAIM_ID
	FROM    FDBMD.MEDHDR  MEDHDR INNER JOIN   
			FDBMD.MEDDTL  MEDDTL  ON MEDHDR.CLAIM_ID = MEDDTL.CLAIM_ID INNER JOIN
			FDBMD.PROVIDER PROVIDER ON PROVIDER.TAXID = MEDHDR.PROV_TIN
	WHERE	MEDHDR.STATUS IN   ( 'WAITPROCESSING', 'REOBP', 'REOBM', 'REOBB' )
    AND		PROVIDER.ELECTRONIC_USE_ONLY_SW = 1 
    AND		MEDDTL.PROC_CODE   NOT IN   ( '90656', '90657', '90658' ) 
	GROUP BY  MEDHDR.CLAIM_ID, MEDHDR.FAMILY_ID, MEDHDR.RELATION_ID, MEDHDR.PROV_TIN, MEDHDR.STATUS
	FOR READ ONLY
	WITH UR;
	
DECLARE CONTINUE HANDLER FOR NOT_FOUND SET NOMORE = 1;
	
OPEN ADOCURSOR;	

OPEN ADOCURSOR1;
CLAIM_LOOP:

LOOP
		FETCH ADOCURSOR1 INTO tempCLAIM_ID;
		
		IF NOMORE = 1 THEN
		LEAVE CLAIM_LOOP;
		ELSE
		
		
		UPDATE FDBMD.MEDHDR SET STATUS = 'INPROGRESS', STATUS_DATE = CURRENT TIMESTAMP WHERE CLAIM_ID =tempCLAIM_ID ;

		INSERT INTO FDBMD.DOC_HISTORY
					(CLAIM_ID,
					DOCID,
					TRANSACTION_TYPE,
					FAMILY_ID,
					RELATION_ID,
					PART_SSN,
					PAT_SSN,
					DOC_CLASS,
					DOC_TYPE,
					SUMMARY,
					DETAIL,
					CREATE_USERID,
					CREATE_DATE )
						SELECT 
						CLAIM_ID,
						DOCID,
						'UPDATE',
						FAMILY_ID,
						RELATION_ID,
						PART_SSN,
						PAT_SSN,
						DOC_CLASS,
						DOC_TYPE,
						'CLAIM STATUS CHANGED FROM WAITPROCESSING TO INPROGRESS',
						'CLAIM STATUS CHANGED FROM WAITPROCESSING TO INPROGRESS, PER JILL',
						'RON QUERY',
						CURRENT TIMESTAMP
						FROM FDBMD.CLAIM_MASTER AS CLAIM_MASTER WHERE CLAIM_MASTER.CLAIM_ID=tempCLAIM_ID;
			
			UPDATE 	FDBMD.CLAIM_MASTER SET PENDED_TO='CECE MANUEL', PENDED_DATE= CURRENT TIMESTAMP WHERE CLAIM_ID=tempCLAIM_ID;
			
			ITERATE CLAIM_LOOP;
			END IF;
END LOOP;
CLOSE ADOCURSOR1;

-- Cursor left open for client application.
END P1
@
-- Grant access privilages to stored procedure
GRANT EXECUTE ON PROCEDURE FDBMD.CLAIMS_WITH_BAD_TAXID TO PUBLIC
@
