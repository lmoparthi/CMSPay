<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ToolTip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>123, 17</value>
  </metadata>
  <metadata name="ProviderSearchContextMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>211, 17</value>
  </metadata>
  <metadata name="ProviderDS.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="NPISearchContextMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>403, 17</value>
  </metadata>
  <metadata name="SybaseDataAdapter1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>584, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>51</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAUFAAAAAACADoIAAAFgAAACgAAABQAAAAoAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACvezIAv5JiANvEoQC8k1MA8OPfAOTOxgDjzMIArXotAObRygDStYsAmFgAAPLp3ADRrZUA5tPDAPXr
        6wD38ekA5dW8AJZVAADm0swAnmEEANe6oQC2hEoA38a3AOnV0gCbXQAA4c6xAMadcgDWtKIAmlwAAMWh
        awChZQ0Ay6SDAPjz7ADcvbEAn2IKAPv49AC8jVoAx5uFAP7+/QDGoHMApW0ZAPHl4QDWuJ4Ax6RwANi4
        qADo2sUA+fbxAKFmEADhybwA27uuAOXQyACxfToA7+TVAKduIQDAmV4A7eLRAN7FtQDeyqsAo2gSAOLM
        wQDavqkAtIRCAMCRbgDXvKQAqHEgAOrX1QCaWgAA0bCRAM2tfgCmbhwAlVMAALB9NQDAlWQAtohDAMGT
        cgDVu5MA3cOxAKRqFgDq3cgAz7GCAPLm4wCqcyYAv5ZZAP38+gDauq0ArHcuAKNoFQCgZAsA2bipAKdw
        HQDMqoUAz6mNAM2niQC9kVoAsoA+ANS1mQCrdSkA1biWANu8rwDdvrQA5M7EANnBnQC5jFAA0K+OAMql
        fQDIo3kAkk0AANzBrgDOrIkA1bKdALiJTAC7jVUA3dTKAMGbYACdXwMA49G2ALSFPwDXtqUAsYE4AMqo
        dQCrdSUA7ODOANKylADq6vEAtoVFALmNSgDEnW0AuYlQAL+VXQDgzK4A9e/kAPPn5gC6jkwApWoZAOLK
        vwDkzcQAwploAMSfZwDbwK0AsYA2ANW3nAC0gkIAs4NAANi8nQDQsoUAw5xsAPTt4gDNroAAxJZ6ALeH
        SQDgyLsA7O72ALeJSQDFmX8A2LeoAMqhfwDfx7kA1LaVAP37+ACsdS4AzauBAMOXawDJpHoAw51lAMKc
        YQCqcSsAu5BPAN7HrwDProYArHcqAMuqeQDl0MkAvZBdAMCYZQC2g1IA1LGbANe9lwCocCIAsn1BAPDi
        3AC+jWYApWscAKRrFgCdXwgA4drVAOva0ADm0MoAtYJHAJ9jCADProsA3cSzAPbw5wCaWwIA8+zhAPDm
        1wDn084AsoVDANS0mADUuI4Ak1AAALyQVgCpcyIAy6iBAMuofQDIn3gA48+8AJxdBADbwaYAuotUAKJn
        DgC0h0YAn2IOALeGTACZWgAAmFcAAOPNwwDlz8cAuItHAPTo6ADs380A8+vfANm5qgDTtJcA3cemAObR
        ywDauawAx6J3AOHMtwDgybIAo2kcANW3lADMrHwA3sC4AOLGwgDMqn8AuIdPAJlZAADp2MsAtY1QAO7j
        0wDr3ssA07WQAMSZbwCzgzsA3cSrAOjU0ADav6sA59fAALOCPwDQq5AA7+HbAJxeAADYt6cA4svAAP//
        /wD///8Aampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampq
        ampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampq
        ampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampq
        ampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampq
        ampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampq
        ampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampq
        rq6urq6u5eXlampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqriUl
        cHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwmpqampolJSUlJSUlJZmuampq
        ampqampqampqampqaqUlcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBw
        cHBwcHBwcHBwcHBwcHBwcHAlampqampqampqampqakpwcHBwcJqamnBwcHBwcHBwcHCamnBwmppwcJqa
        cHCampqampqamppwcJqamiUlJSWZSq6upeVq5XBwmnBwcHBwcHAlampqampqampqamolcHBwcHBwJaVq
        ampqpUqaJSVKruVqJZpqaplwamolJWpqampqampqaqVwpWpqampqampqampqampqmkpqamrlrnBwcHAl
        ampqampqampqappwcHBwJSWacJolrkqacJpqampqamolSmpqmXBqaiUlampqampqampq5XClampqampq
        ampqampqamolcGpqampq5XBwcHClampqampqampqcHBwcHCuamqyJXBwcHBwcKVqampqpZrlamolcGpq
        JZpqampqampqamqlcK5qampqampqampqampqakpwmWpqampqSnBwcJpqampqampqaq5wcCUlcCVqampq
        rnBwcHBwrmpqaq5wJWpqaiVwamqucGpqampqauWuJXBwmWpqampqampqampqampqrnBw5WpqampqmnBw
        cOVqampqampqJXBwrmpwcKVqampqpSVwcHBKampqmnCuampqJXBqaq5wampqaqWacHCaJZpwmiUlJSUl
        JSUlJZpwcHBwcHCaJSUl5WqucHBwJWpqampqampwcHCuakpwmq5qampqakpwcCVqamolcOVqamolcGpq
        pXDlampqriVqampqampqampqampqampqampqrpklcHBwcHCuamolcHBwampqampq5XBwcK5qappwcCVq
        ampqaplwmmpqaq5wSmpqappwpWpqcK5qamquJWpqampqampqampqampqampqampqampqaq4lcK5qaq5w
        cHBqampqamqucHBw5WpqrnBwmmpqampqSnBwpWpqapqaampqcHCuampwrmpqaq4lampqampqampqampq
        ampqampqampqampqampwmWpqrnBwcGpqampqaplwcHBqampqJXCaampqamo+cHCuampqSnCuampwcK5q
        anBKampqpSVqampqampqampqampqampqampqampqampqanAlamqucHBwpWpqampqJXBwcGpqamqlcJpq
        ampqaj5wcEpqamqlcCVq5XBwrmpqcCVqamrlJWpqampqampqampqampqampqampqampqampqcCVqaq5w
        cHCuampqamolcHCaampqampwmmpqampqSnBwJWpqamolcGrlcHBKampwJWpqamqaampqampqampqampq
        ampqampqampqampqampwmmpqrnBwcK5qampqappwcJpqampq5XAlampqampKcHAlampqaq5wrqVwcCVq
        aiWaampqappqampqampqampqampqampqampqampqampqanBwampKcHBwrmpqampqcHBwJWpqamqlcCVq
        ampqaiVwcHClampq5XAlrnBwJWpqJXBqampqmmpqampqampqampqampqampqampqampqampqcHBqakpw
        cHCuampqampwcHAlampqaq5wJWpqampqJXBwcK5qampqJXBKcHAlamolcGpqamqaampqampqampqampq
        ampqampqampqampqampwcOVqSnBwcKVqampqanBwcEpqampqrnCZampqamolcHBwSmpqamqucHBwcJpq
        akpwrmpqaiVqampqampqampqampqampqampqampqampqanBwrmpKcHBwampqampqcHBwJa6uSkolcEpq
        ampqappwcHAlampqamqacHBwcCWZJXCZampqJeVqampqampqampqampqampqampqampqampqcHCuakpw
        cHBqampqampwcHBwJSUlmSVwrmpqamrlmnBwcCVqampqakpwcCUlJXBwcJpqamolrmpqampqampqampq
        ampqampqampqampqampwcK5qrnBwcGpqampqanBwcK5qampqpXCuampqauWamnBwcKVqampqpXBwampq
        amolcJpqaiWuampqampqampqampqampqampqampqampqanBw5WqucHBwampqampqcHBwrmpqamqucKVq
        ampq5XBqanBwrmpqampqJXBqampqampwcGpqSplqampqampqampqampqampqampqampqampqcJpqaq5w
        cJpqampqampwcHCuampqaiVw5WpqamrlcKVqJXBKampqamqucKVqampqaplwamquJWpqampqampqampq
        ampqampqampqampqampwJWpqrnBwJWpqampqanBwcK5qampqJXBqampqauVwrmqucCVqampqaqVwmWpq
        ampqanBqaq6aampqampqampqamquJSWaSmpqampqampqpXCuamqucHAlampqampqcHBwJWpqamolmmpq
        ampqapolamqammpqampqaiUlampqamqlmmpq5XBqampqampqampqrnCurkpw5WpqampqamqucOVqaq5w
        cEpqampqampwcHBwcJquanAlampqampqJSVqaiVwrmpqampqrnBwcHBwcHAlamrlcGpqampqampqampw
        cK6urnClampqampqaiVwampqrnBwrmpqampqappwcHAlmnBwcCVqampqampKcHBwJXCapWpqaqUlcHBw
        cCVKrmpqampw5Wpqampqampqappwrq6ucKVqampqampqmiVqamqucHCuampqampqJXBwcK5qrkolcLJq
        ampqaq5wcJlqSnBwmiVKmnBwcHBwpWpqampqanCuampqampqampqcHBKmXAlampqampqampwmWpqaq5w
        cK5qampqamolcHBwrmpqauWaJWpqampqappwSmpqrnBwcHBwcHAlmnCuampqampqmiVqampqampqpXBw
        cHBwSmpqampqampqanCuampqrnBwrmpqampqaplwcHCuampqaq5wSmpqampqPnAlampqsppwcHCZpWol
        cK5qampqamolcGpqampqaq5wrmpqrqVqampqampqamqlcK5qamrlcHCuampqampqmXBwcEpqampqaplw
        SkpKSq6ymnCuampqsj6upWpqaiVwrmpqampqaiVwampqamqlcJlqampqampqampqampqakpw5WpqauVw
        cK5qampqamqZcHBwSmpqampqaiVwcHBwcHBwcJpqampqampqampqmXCuampqampqSnClampqaiVwampq
        ampqampqampqampqJXBqampq5XBwrmpqampqaplwcHCZampqampqaqWlpSVwJSVwcCUlJSWaJaVqamqZ
        cK5qampqamqucJlqampqmXBqampqampqampqampqampwcGpqamrlcHCuampqampqmXBwcCVqampqampq
        amqycHBKakpwcHBwcJqZpWpqaplwrmpqampqaq5wmmpqamrlcKVqampqampqampqampqanAlampqampw
        cCVqampqamqZcHBwJWpqampKrqXlaiVwmqVqarKZmZmuampqampqJXDlampqampqpXBwampqampwJSWa
        cHAlrmpqampqamqucK5qampqanBwJWpqampqaplwcHAlampqaj6amppwcCWlampqampqampqampqamol
        cGpqampqampqcHCuampqanBwcEpKJZpwcJquampqaiVwampqampqcHAlampqampqmXBwcCVqampqauWl
        pa6uampqampqampqampqampqapqaampqaq6aJSVwcCVqpSVwcEpqampqamqlJXBwJWpqcCVqampqampw
        cCVqampqamqZcHBwJWpqampqampqampqampqampqampqampqamqlcCVqampqmSVqJXBwcHBwcJpqampq
        ampqampqanBwcCVwrmpqampqappwJWpqampqaplwcHBwpWpqampqampqampqampqampqampqampqaq5w
        rmpqamolSmolcHBwcHBKampqampqampqampqSnBwcHDlampqampqmnAlampqampqmXBwcHAlampqampq
        ampqampqampqampqampqampqJXBqampqapquaiVwcHCaampqampqampqampqampqJXBwcGpqampqamqa
        cCVqampqamqZcHCZJXAlampqampqampqampqampqampqampqaqVwJWpqamrlcK5qJXBwSmpqampqaiUl
        maVqampqampqcHCaampqampqappwJWpqampqaplwcEpqcHBKampqampqampqampqampqampqampqSnDl
        amrlJXBwmq4lmmpqampqaq5wcHAlJSVqampqamqucHBqampqampqmnAlampqampqmXBwSmqucHCuampq
        ampqampqampqampqampqamqaJWpqanBwpeWlpeVqampqamolcOWZcGpqJSVqampqamolcOVqampqamol
        cCVqampqamqZcHBKamqZcHClampqampqampqampqampqampqPnBqampqSnBqampqampqampqmiVqaq5w
        pWpqmppqampqampwrmpqampqaiVwJWpqampqaplwcEpqamqacCXlampqamrlpa6lampqampq5Zlwrmpq
        ampqmnClampqampqrnClampqrnCZampqcK5qampqanCuampqampqJXAlampqampqmXBwJWpqauVwcJqu
        rkolmnBwcHCaJa5qaq6acK5qampqamqucHAlSqVqaiVwcGpqamolcHAlampqampqampqcEpqampqamol
        cCVqampqamqZcHAlampqaqVwcHBwcHBwcHBwcHBwcCWacHCuampqampqampwcHBwcHAlSuUlmmpqrnCl
        SnCaampqampqaqVwrmpqampqaiVwJWpqampqakpwcCVqampqamolcHBwcHBwJWpqaq6acHCaampqampq
        ampq5XBqaq5wJWpqauVwrmqaampqakpwrmpqampqrnBqampqampqJXAlampqampqrnBwJWpqampqamqu
        cHBwJWpqampqamolcHBqampqampqamqucGpqrnCuampqaiVwJa5qampqaq5wJWpqamolJWpqampqamol
        cCVqampqamqucHAlampqampqamqacOVqampqampqamqacK5qampqampqakpwamolcGpqampqrnBwrmpq
        ampqakpwJWpqJXCuampqampqaiVwSmpqampqauVwcCVqampqampqpXCuampqampqampqauVwJWpqampq
        ampqJZpqaiWa5WpqampqJXBwJZmurq7lrnBw5a5wJWpqampqampqJXCuampqampqanBwJWpqampqamqZ
        cGpqampqampqampqapqaampqamolJSWacHAlcHBwrmpqampqmnCuampqaq4lmnBwcJpqampqampqamqa
        cK5qampqampqcHAlampqampqaiVwampqampqampqampqmXBqampqpZpqauVwrq6uPnCuampqaq4lampq
        ampqampqrppwJWpqampqampqappwrmpqampqampwcCVqampqampqcHBqampqampqampqampKcOVqamql
        mmpqpSWurq6umq5qamolJWpqampqampqampqanBwampqampqampqmnCuampqampqanBwJWpqampqampw
        cGpqampqampqampqakpw5WpqauVwcOVKJa6urq4lrmpqJXCuampqampqampqampqJXDlampqampqampw
        cK5qampqampqJXAlampqampqanBwampqampqampqampqSnBqampqaq4lcHCarq6uriWuamqacGpqampq
        ampqampqamrlcK5qampqampqanBwrmpqampqamolcCVqampqampqcHBqampqampqampqamolmmpqampq
        ampqrppwJSWuJa5qappwampqampqampqampqampwrmpqampqampqcHCuampqampqaiVwJWpqampqamol
        cOVqampqampqampqanAlampqampqampqakpwcHBwrmpqmnBqampqampqampqampq5XCuampqampqauVw
        cK5qampqampqJXAlampqampqakpw5WpqampqampqamqucK5qampqampqampqaq6acHCuamqacGpqampq
        ampqampqamqucKVqampqampqpXBwrmpqampqamolcCVqampqampq5XAlampqampqampqaiVwampqampq
        ampqampqamqZmWpqappwSq7lampqampqampqaq5w5WpqampqamqucHCuampqampqaiVwmmpqampqampq
        JXAlampqampqampqcK5qampqampqampqampqampqampqmnCZJXCuampqampqampqSnBqampqampqaq5w
        cOVqampqampqJXCaampqampqamrlmnBKampqampq5Zolampqampqampqampqampqampqampwmq6ucHBq
        ampqampqamolmmpqampqampqrnBwampqampqamolcJpqampqampqampqJXCarq7laiVwJWpqampqampq
        ampqampqampqampqpXCZrq4lcJpqampqampqaiUlampqampqampKcHBqampqampqauVwcJlqampqampq
        ampqrppwcHBwmkpqampqampqampqampqampqampqampKcK6urq6acHAlrq5qamqlmiVqampqampqaiVw
        JWpqampqampqappwcK5qampqampqampqauWuruVqampqampqampqampqampqampqampqaiWarpqariVw
        mZklJZpwcHBwrmpqampqampKcHBqampqampqampqrnBwcGpqampqampqampqampqampqampqampqampq
        ampqampqampqampqcCWumnCuJXClampqaqWucHDlampqampqJXBwJWpqampqampqampqcHBwmiVKruVq
        ampqampqampqampqampqampqampqampqampqampqaqVwJa4lJa6acCVKSq6laq5wcJqampqamnBwcCVq
        ampqampqampqamqucHBwcHBwcHCaJSUlmUpKrq6urq6urq6urq5KSkpKmSUlJSUlJSUlJXBwJa6urpqa
        peWuSppwcHBwcHBwcHBwmkpqampqampqampqampqamolJXBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBw
        cHBwcHBwcHBwcHBwcHBwPq4+cK5qriWacHBwcHBwcJolrmpqampqampqampqampqampqampqampqaqWu
        rq6urq6umSUlSq6urq6urq6urq6urq6urq6urq6urq4lcHCaJXBwcHBwcHBwcCWZrmpqampqampqampq
        ampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqamqucHBwJSUl
        cHBwmplqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampq
        ampqampqampqampqamqucK5qampqampqampqampqampqampqampqampqampqampqampqampqampqampq
        ampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampq
        ampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampq
        ampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampq
        ampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqagAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>